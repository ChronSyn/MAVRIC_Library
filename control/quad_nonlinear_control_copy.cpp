/*******************************************************************************
 * Copyright (c) 2009-2016, MAV'RIC Development Team
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice,
 * this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 * this list of conditions and the following disclaimer in the documentation
 * and/or other materials provided with the distribution.
 *
 * 3. Neither the name of the copyright holder nor the names of its contributors
 * may be used to endorse or promote products derived from this software without
 * specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 ******************************************************************************/

/*******************************************************************************
 * \file quad_nonlinear_control.cpp
 *
 * \author MAV'RIC Team
 * \author Pu Bai
 *
 * \brief Stabilization of a quadrotor using nonlinear control law
 *
 ******************************************************************************/

#include <math.h>
#include "quad_nonlinear_control.hpp"
#include "simulation/dynamic_model_quad_diag.hpp"

extern "C"
{
#include "util/print_util.h"
}

bool quad_nonlinear_control_init(quad_nonlinear_control_struct* quad_nonlinear_control, const Position_estimation* pos_est, const ahrs_t* ahrs, thrust_command_t* thrust, torque_command_t* torque)
{
	bool init_success = true;

    //init dependencies
    quad_nonlinear_control->pos_est = pos_est;
    quad_nonlinear_control->ahrs = ahrs;
    quad_nonlinear_control->thrust_command = thrust;
    quad_nonlinear_control->torque_command = torque;

    return init_success;
}

void quad_nonlinear_control_law(quad_nonlinear_control_struct* quad_nonlinear_control)
{
    const float m = 0.35;																// Quadrotor mass
    const float J11 = 0.012;															// Quadrotor inertia tenser
    const float J12 = 0;
    const float J13 = 0;
    const float J22 = 0.012;
    const float J23 = 0;
    const float J33 = 0.017;
    const float g = 9.81;															    // Gravity of Earth


    const float ka = 0.1;																// Control gains
    const float kb = 1;
    const float kc = 30;
    const float kd = 1;
    const float k2 = 0.1;
    const float k3 = 10;

    /* Current this controller stabilizes the vehicle at (0,0,0), with the desired trajectory as input, it would be able to
       follow a specific trajectory. */ 
    const double p1 = quad_nonlinear_control->pos_est->local_position.pos[0];           // Quadrotor position
    const double p2 = quad_nonlinear_control->pos_est->local_position.pos[1];
    const double p3 = quad_nonlinear_control->pos_est->local_position.pos[2];

    const double v1 = quad_nonlinear_control->pos_est->vel[0];						    // Quadrotor velocity
    const double v2 = quad_nonlinear_control->pos_est->vel[1];
    const double v3 = quad_nonlinear_control->pos_est->vel[2];

    Mat<3,3> rotation_matrix;														    // Quadrotor attitude in matrix representation
    // Covert quaternion into rotation matrix
    quat_to_rot(quad_nonlinear_control->ahrs->qe, rotation_matrix);
    const double R11 = rotation_matrix(0,0);
    const double R12 = rotation_matrix(0,1);
    const double R13 = rotation_matrix(0,2);
    const double R21 = rotation_matrix(1,0);
    const double R22 = rotation_matrix(1,1);
    const double R23 = rotation_matrix(1,2);
    const double R31 = rotation_matrix(2,0);
    const double R32 = rotation_matrix(2,1);
    const double R33 = rotation_matrix(2,2);

    const double w1 = quad_nonlinear_control->ahrs->angular_speed[0];				    // Quadrotor angular velocity
    const double w2 = quad_nonlinear_control->ahrs->angular_speed[1];
    const double w3 = quad_nonlinear_control->ahrs->angular_speed[2];

    // Control law design
    double thrust =  m*(R33*g + R13*ka*p1 + R23*ka*p2 + R33*ka*p3 + R13*kb*v1 + R23*kb*v2 + R33*kb*v3);
    double torque_roll = -(w1*(-(J13*w2)+J12*w3))-w2*(-(J23*w2)+J22*w3)-w3*(-(J33*w2)+J23*w3)-J13*((g*ka*kb*p2*R12*w1-g*ka*kb*p1*R22*w1-g*ka*kb*p1*pow(R13,2)*R22*w1-pow(ka,2)*kb*p1*p3*pow(R13,2)*R22*w1+g*ka*kb*p1*R12*R13*R23*w1+pow(ka,2)*kb*p1*p3*R12*R13*R23*w1-g*ka*kb*p2*R13*R22*R23*w1-pow(ka,2)*kb*p2*p3*R13*R22*R23*w1+g*ka*kb*p2*R12*pow(R23,2)*w1+pow(ka,2)*kb*p2*p3*R12*pow(R23,2)*w1+pow(ka,2)*kb*p1*p2*pow(R13,2)*R32*w1-pow(ka,2)*kb*pow(p1,2)*R13*R23*R32*w1+pow(ka,2)*kb*pow(p2,2)*R13*R23*R32*w1-pow(ka,2)*kb*p1*p2*pow(R23,2)*R32*w1-pow(ka,2)*kb*p1*p2*R12*R13*R33*w1-pow(g,2)*kb*R13*R22*R33*w1+pow(ka,2)*kb*pow(p1,2)*R13*R22*R33*w1-2*g*ka*kb*p3*R13*R22*R33*w1-pow(ka,2)*kb*pow(p3,2)*R13*R22*R33*w1+pow(g,2)*kb*R12*R23*R33*w1-pow(ka,2)*kb*pow(p2,2)*R12*R23*R33*w1+2*g*ka*kb*p3*R12*R23*R33*w1+pow(ka,2)*kb*pow(p3,2)*R12*R23*R33*w1+pow(ka,2)*kb*p1*p2*R22*R23*R33*w1+g*ka*kb*p2*R13*R32*R33*w1+pow(ka,2)*kb*p2*p3*R13*R32*R33*w1-g*ka*kb*p1*R23*R32*R33*w1-pow(ka,2)*kb*p1*p3*R23*R32*R33*w1-g*ka*kb*p2*R12*pow(R33,2)*w1-pow(ka,2)*kb*p2*p3*R12*pow(R33,2)*w1+g*ka*kb*p1*R22*pow(R33,2)*w1+pow(ka,2)*kb*p1*p3*R22*pow(R33,2)*w1+g*ka*R22*v1*w1-g*pow(kb,2)*R22*v1*w1+pow(ka,2)*p3*R22*v1*w1-g*pow(kb,2)*pow(R13,2)*R22*v1*w1-ka*pow(kb,2)*p3*pow(R13,2)*R22*v1*w1+g*pow(kb,2)*R12*R13*R23*v1*w1+ka*pow(kb,2)*p3*R12*R13*R23*v1*w1-pow(ka,2)*p2*R32*v1*w1+ka*pow(kb,2)*p2*pow(R13,2)*R32*v1*w1-2*ka*pow(kb,2)*p1*R13*R23*R32*v1*w1-ka*pow(kb,2)*p2*pow(R23,2)*R32*v1*w1-ka*pow(kb,2)*p2*R12*R13*R33*v1*w1+2*ka*pow(kb,2)*p1*R13*R22*R33*v1*w1+ka*pow(kb,2)*p2*R22*R23*R33*v1*w1-g*pow(kb,2)*R23*R32*R33*v1*w1-ka*pow(kb,2)*p3*R23*R32*R33*v1*w1+g*pow(kb,2)*R22*pow(R33,2)*v1*w1+ka*pow(kb,2)*p3*R22*pow(R33,2)*v1*w1-pow(kb,3)*R13*R23*R32*pow(v1,2)*w1+pow(kb,3)*R13*R22*R33*pow(v1,2)*w1-g*ka*R12*v2*w1+g*pow(kb,2)*R12*v2*w1-pow(ka,2)*p3*R12*v2*w1-g*pow(kb,2)*R13*R22*R23*v2*w1-ka*pow(kb,2)*p3*R13*R22*R23*v2*w1+g*pow(kb,2)*R12*pow(R23,2)*v2*w1+ka*pow(kb,2)*p3*R12*pow(R23,2)*v2*w1+pow(ka,2)*p1*R32*v2*w1+ka*pow(kb,2)*p1*pow(R13,2)*R32*v2*w1+2*ka*pow(kb,2)*p2*R13*R23*R32*v2*w1-ka*pow(kb,2)*p1*pow(R23,2)*R32*v2*w1-ka*pow(kb,2)*p1*R12*R13*R33*v2*w1-2*ka*pow(kb,2)*p2*R12*R23*R33*v2*w1+ka*pow(kb,2)*p1*R22*R23*R33*v2*w1+g*pow(kb,2)*R13*R32*R33*v2*w1+ka*pow(kb,2)*p3*R13*R32*R33*v2*w1-g*pow(kb,2)*R12*pow(R33,2)*v2*w1-ka*pow(kb,2)*p3*R12*pow(R33,2)*v2*w1+pow(kb,3)*pow(R13,2)*R32*v1*v2*w1-pow(kb,3)*pow(R23,2)*R32*v1*v2*w1-pow(kb,3)*R12*R13*R33*v1*v2*w1+pow(kb,3)*R22*R23*R33*v1*v2*w1+pow(kb,3)*R13*R23*R32*pow(v2,2)*w1-pow(kb,3)*R12*R23*R33*pow(v2,2)*w1+pow(ka,2)*p2*R12*v3*w1-pow(ka,2)*p1*R22*v3*w1-ka*pow(kb,2)*p1*pow(R13,2)*R22*v3*w1+ka*pow(kb,2)*p1*R12*R13*R23*v3*w1-ka*pow(kb,2)*p2*R13*R22*R23*v3*w1+ka*pow(kb,2)*p2*R12*pow(R23,2)*v3*w1-2*g*pow(kb,2)*R13*R22*R33*v3*w1-2*ka*pow(kb,2)*p3*R13*R22*R33*v3*w1+2*g*pow(kb,2)*R12*R23*R33*v3*w1+2*ka*pow(kb,2)*p3*R12*R23*R33*v3*w1+ka*pow(kb,2)*p2*R13*R32*R33*v3*w1-ka*pow(kb,2)*p1*R23*R32*R33*v3*w1-ka*pow(kb,2)*p2*R12*pow(R33,2)*v3*w1+ka*pow(kb,2)*p1*R22*pow(R33,2)*v3*w1-pow(kb,3)*pow(R13,2)*R22*v1*v3*w1+pow(kb,3)*R12*R13*R23*v1*v3*w1-pow(kb,3)*R23*R32*R33*v1*v3*w1+pow(kb,3)*R22*pow(R33,2)*v1*v3*w1-pow(kb,3)*R13*R22*R23*v2*v3*w1+pow(kb,3)*R12*pow(R23,2)*v2*v3*w1+pow(kb,3)*R13*R32*R33*v2*v3*w1-pow(kb,3)*R12*pow(R33,2)*v2*v3*w1-pow(kb,3)*R13*R22*R33*pow(v3,2)*w1+pow(kb,3)*R12*R23*R33*pow(v3,2)*w1-g*ka*kb*p2*R11*w2+g*ka*kb*p1*R21*w2+g*ka*kb*p1*pow(R13,2)*R21*w2+pow(ka,2)*kb*p1*p3*pow(R13,2)*R21*w2-g*ka*kb*p1*R11*R13*R23*w2-pow(ka,2)*kb*p1*p3*R11*R13*R23*w2+g*ka*kb*p2*R13*R21*R23*w2+pow(ka,2)*kb*p2*p3*R13*R21*R23*w2-g*ka*kb*p2*R11*pow(R23,2)*w2-pow(ka,2)*kb*p2*p3*R11*pow(R23,2)*w2-pow(ka,2)*kb*p1*p2*pow(R13,2)*R31*w2+pow(ka,2)*kb*pow(p1,2)*R13*R23*R31*w2-pow(ka,2)*kb*pow(p2,2)*R13*R23*R31*w2+pow(ka,2)*kb*p1*p2*pow(R23,2)*R31*w2+pow(ka,2)*kb*p1*p2*R11*R13*R33*w2+pow(g,2)*kb*R13*R21*R33*w2-pow(ka,2)*kb*pow(p1,2)*R13*R21*R33*w2+2*g*ka*kb*p3*R13*R21*R33*w2+pow(ka,2)*kb*pow(p3,2)*R13*R21*R33*w2-pow(g,2)*kb*R11*R23*R33*w2+pow(ka,2)*kb*pow(p2,2)*R11*R23*R33*w2-2*g*ka*kb*p3*R11*R23*R33*w2-pow(ka,2)*kb*pow(p3,2)*R11*R23*R33*w2-pow(ka,2)*kb*p1*p2*R21*R23*R33*w2-g*ka*kb*p2*R13*R31*R33*w2-pow(ka,2)*kb*p2*p3*R13*R31*R33*w2+g*ka*kb*p1*R23*R31*R33*w2+pow(ka,2)*kb*p1*p3*R23*R31*R33*w2+g*ka*kb*p2*R11*pow(R33,2)*w2+pow(ka,2)*kb*p2*p3*R11*pow(R33,2)*w2-g*ka*kb*p1*R21*pow(R33,2)*w2-pow(ka,2)*kb*p1*p3*R21*pow(R33,2)*w2-g*ka*R21*v1*w2+g*pow(kb,2)*R21*v1*w2-pow(ka,2)*p3*R21*v1*w2+g*pow(kb,2)*pow(R13,2)*R21*v1*w2+ka*pow(kb,2)*p3*pow(R13,2)*R21*v1*w2-g*pow(kb,2)*R11*R13*R23*v1*w2-ka*pow(kb,2)*p3*R11*R13*R23*v1*w2+pow(ka,2)*p2*R31*v1*w2-ka*pow(kb,2)*p2*pow(R13,2)*R31*v1*w2+2*ka*pow(kb,2)*p1*R13*R23*R31*v1*w2+ka*pow(kb,2)*p2*pow(R23,2)*R31*v1*w2+ka*pow(kb,2)*p2*R11*R13*R33*v1*w2-2*ka*pow(kb,2)*p1*R13*R21*R33*v1*w2-ka*pow(kb,2)*p2*R21*R23*R33*v1*w2+g*pow(kb,2)*R23*R31*R33*v1*w2+ka*pow(kb,2)*p3*R23*R31*R33*v1*w2-g*pow(kb,2)*R21*pow(R33,2)*v1*w2-ka*pow(kb,2)*p3*R21*pow(R33,2)*v1*w2+pow(kb,3)*R13*R23*R31*pow(v1,2)*w2-pow(kb,3)*R13*R21*R33*pow(v1,2)*w2+g*ka*R11*v2*w2-g*pow(kb,2)*R11*v2*w2+pow(ka,2)*p3*R11*v2*w2+g*pow(kb,2)*R13*R21*R23*v2*w2+ka*pow(kb,2)*p3*R13*R21*R23*v2*w2-g*pow(kb,2)*R11*pow(R23,2)*v2*w2-ka*pow(kb,2)*p3*R11*pow(R23,2)*v2*w2-pow(ka,2)*p1*R31*v2*w2-ka*pow(kb,2)*p1*pow(R13,2)*R31*v2*w2-2*ka*pow(kb,2)*p2*R13*R23*R31*v2*w2+ka*pow(kb,2)*p1*pow(R23,2)*R31*v2*w2+ka*pow(kb,2)*p1*R11*R13*R33*v2*w2+2*ka*pow(kb,2)*p2*R11*R23*R33*v2*w2-ka*pow(kb,2)*p1*R21*R23*R33*v2*w2-g*pow(kb,2)*R13*R31*R33*v2*w2-ka*pow(kb,2)*p3*R13*R31*R33*v2*w2+g*pow(kb,2)*R11*pow(R33,2)*v2*w2+ka*pow(kb,2)*p3*R11*pow(R33,2)*v2*w2-pow(kb,3)*pow(R13,2)*R31*v1*v2*w2+pow(kb,3)*pow(R23,2)*R31*v1*v2*w2+pow(kb,3)*R11*R13*R33*v1*v2*w2-pow(kb,3)*R21*R23*R33*v1*v2*w2-pow(kb,3)*R13*R23*R31*pow(v2,2)*w2+pow(kb,3)*R11*R23*R33*pow(v2,2)*w2-pow(ka,2)*p2*R11*v3*w2+pow(ka,2)*p1*R21*v3*w2+ka*pow(kb,2)*p1*pow(R13,2)*R21*v3*w2-ka*pow(kb,2)*p1*R11*R13*R23*v3*w2+ka*pow(kb,2)*p2*R13*R21*R23*v3*w2-ka*pow(kb,2)*p2*R11*pow(R23,2)*v3*w2+2*g*pow(kb,2)*R13*R21*R33*v3*w2+2*ka*pow(kb,2)*p3*R13*R21*R33*v3*w2-2*g*pow(kb,2)*R11*R23*R33*v3*w2-2*ka*pow(kb,2)*p3*R11*R23*R33*v3*w2-ka*pow(kb,2)*p2*R13*R31*R33*v3*w2+ka*pow(kb,2)*p1*R23*R31*R33*v3*w2+ka*pow(kb,2)*p2*R11*pow(R33,2)*v3*w2-ka*pow(kb,2)*p1*R21*pow(R33,2)*v3*w2+pow(kb,3)*pow(R13,2)*R21*v1*v3*w2-pow(kb,3)*R11*R13*R23*v1*v3*w2+pow(kb,3)*R23*R31*R33*v1*v3*w2-pow(kb,3)*R21*pow(R33,2)*v1*v3*w2+pow(kb,3)*R13*R21*R23*v2*v3*w2-pow(kb,3)*R11*pow(R23,2)*v2*v3*w2-pow(kb,3)*R13*R31*R33*v2*v3*w2+pow(kb,3)*R11*pow(R33,2)*v2*v3*w2+pow(kb,3)*R13*R21*R33*pow(v3,2)*w2-pow(kb,3)*R11*R23*R33*pow(v3,2)*w2)/(pow(g,2)+pow(ka,2)*pow(p1,2)+pow(ka,2)*pow(p2,2)+2*g*ka*p3+pow(ka,2)*pow(p3,2)+2*ka*kb*p1*v1+pow(kb,2)*pow(v1,2)+2*ka*kb*p2*v2+pow(kb,2)*pow(v2,2)+2*g*kb*v3+2*ka*kb*p3*v3+pow(kb,2)*pow(v3,2))-((R33*(ka*p2+kb*v2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(R23*(g+ka*p3+kb*v3))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))*((ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))*(((ka*p2+kb*v2)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((3*ka*p1+3*kb*v1)*(ka*p2+kb*v2)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5))+(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))*(((g+ka*p3+kb*v3)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((3*ka*p1+3*kb*v1)*(g+ka*p3+kb*v3)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5))+(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))*((2*(ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(3*ka*p1+3*kb*v1)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5)+((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5))-(pow(ka*p1+kb*v1,2)/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)-1/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))*(ka*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)+kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R12*w1)+R11*w2)+R13*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2))))-((ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)+kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R22*w1)+R21*w2)+R23*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(ka*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))-kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R32*w1)+R31*w2)+R33*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5))+((R33*(ka*p1+kb*v1))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(R13*(g+ka*p3+kb*v3))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))*((ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))*(((ka*p2+kb*v2)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(3*ka*p2+3*kb*v2)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5))+(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))*(((g+ka*p3+kb*v3)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p2+kb*v2)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((3*ka*p2+3*kb*v2)*(g+ka*p3+kb*v3)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5))+(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))*((2*(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p2+kb*v2)*(3*ka*p2+3*kb*v2)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5)+((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5))-((ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)+kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R12*w1)+R11*w2)+R13*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)-(pow(ka*p2+kb*v2,2)/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)-1/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))*(ka*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)+kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R22*w1)+R21*w2)+R23*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2))))+((ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(ka*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))-kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R32*w1)+R31*w2)+R33*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5))-(-((R23*(ka*p1+kb*v1))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))+(R13*(ka*p2+kb*v2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))*(-((ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))*(((g+ka*p3+kb*v3)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(3*g+3*ka*p3+3*kb*v3)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5)))-(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))*(((g+ka*p3+kb*v3)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p2+kb*v2)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p2+kb*v2)*(3*g+3*ka*p3+3*kb*v3)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5))-(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))*((2*(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((g+ka*p3+kb*v3)*(3*g+3*ka*p3+3*kb*v3)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5)+((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5))+((ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(ka*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)+kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R12*w1)+R11*w2)+R13*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(ka*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)+kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R22*w1)+R21*w2)+R23*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+(-(pow(g+ka*p3+kb*v3,2)/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5))+1/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))*(ka*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))-kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R32*w1)+R31*w2)+R33*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2)))))+kd*(-((-(g*(-(pow(kb,2)*(-(R23*v1)+R13*v2))+ka*(-(kb*p2*R13)+kb*p1*R23-R23*v1+R13*v2)))+pow(ka,2)*(p3*R23*v1-p2*R33*v1-p3*R13*v2+p1*R33*v2+p2*R13*v3-p1*R23*v3))/(pow(g,2)+pow(ka,2)*(pow(p1,2)+pow(p2,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p1*v1+p2*v2+p3*v3)+pow(kb,2)*(pow(v1,2)+pow(v2,2)+pow(v3,2))))+w3))+J12*((k3*R11*(ka*p1+kb*v1))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+(k3*R21*(ka*p2+kb*v2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+(k3*R31*(g+ka*p3+kb*v3))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-kd*(-((R22*(kc*R33*(ka*p1+kb*v1)-kc*R13*(g+ka*p3+kb*v3)+R33*(k2*p1+v1)*(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-R13*(k2*p3+v3)*(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+(k3*(g+ka*p3+kb*v3)*((ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(pow(g,2)+pow(ka,2)*(pow(p2,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p2*v2+p3*v3)+pow(kb,2)*(pow(v2,2)+pow(v3,2)))*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+(k3*(ka*p1+kb*v1)*((pow(ka,2)*(pow(p1,2)+pow(p2,2))+2*ka*kb*(p1*v1+p2*v2)+pow(kb,2)*(pow(v1,2)+pow(v2,2)))*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5))+R32*(-(kc*R23*(ka*p1+kb*v1))+kc*R13*(ka*p2+kb*v2)-R23*(k2*p1+v1)*(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+R13*(k2*p2+v2)*(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(k3*(ka*p2+kb*v2)*((ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(pow(g,2)+pow(ka,2)*(pow(p2,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p2*v2+p3*v3)+pow(kb,2)*(pow(v2,2)+pow(v3,2)))*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+(k3*(ka*p1+kb*v1)*((ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(pow(g,2)+pow(ka,2)*(pow(p1,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p1*v1+p3*v3)+pow(kb,2)*(pow(v1,2)+pow(v3,2)))*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5))-R12*(kc*R33*(ka*p2+kb*v2)-kc*R23*(g+ka*p3+kb*v3)+R33*(k2*p2+v2)*(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-R23*(k2*p3+v3)*(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+(k3*(ka*p2+kb*v2)*((pow(ka,2)*(pow(p1,2)+pow(p2,2))+2*ka*kb*(p1*v1+p2*v2)+pow(kb,2)*(pow(v1,2)+pow(v2,2)))*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+(k3*(g+ka*p3+kb*v3)*((ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(pow(g,2)+pow(ka,2)*(pow(p1,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p1*v1+p3*v3)+pow(kb,2)*(pow(v1,2)+pow(v3,2)))*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)))/(k3*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))))+w2)+(R32*(-(R23*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(k2*v1-R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+R13*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(k2*v2-R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))-(kc*R23*((ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(pow(g,2)+pow(ka,2)*(pow(p2,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p2*v2+p3*v3)+pow(kb,2)*(pow(v2,2)+pow(v3,2)))*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+(kc*R13*((ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(pow(g,2)+pow(ka,2)*(pow(p1,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p1*v1+p3*v3)+pow(kb,2)*(pow(v1,2)+pow(v3,2)))*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)-(R23*(k2*p1+v1)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+(R13*(k2*p2+v2)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+(kc*(ka*p2+kb*v2)*(-(R12*w1)+R11*w2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+(k2*p2+v2)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(-(R12*w1)+R11*w2)-(kc*(ka*p1+kb*v1)*(-(R22*w1)+R21*w2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(k2*p1+v1)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(-(R22*w1)+R21*w2)))/k3+(R22*(R33*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(k2*v1-R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))-R13*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(g+k2*v3-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(kc*R33*((ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(pow(g,2)+pow(ka,2)*(pow(p2,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p2*v2+p3*v3)+pow(kb,2)*(pow(v2,2)+pow(v3,2)))*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+(kc*R13*((pow(ka,2)*(pow(p1,2)+pow(p2,2))+2*ka*kb*(p1*v1+p2*v2)+pow(kb,2)*(pow(v1,2)+pow(v2,2)))*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+(R33*(k2*p1+v1)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(R13*(k2*p3+v3)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(kc*(g+ka*p3+kb*v3)*(-(R12*w1)+R11*w2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(k2*p3+v3)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(-(R12*w1)+R11*w2)+(kc*(ka*p1+kb*v1)*(-(R32*w1)+R31*w2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+(k2*p1+v1)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(-(R32*w1)+R31*w2)))/k3-(R12*(R33*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(k2*v2-R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))-R23*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(g+k2*v3-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(kc*R23*((pow(ka,2)*(pow(p1,2)+pow(p2,2))+2*ka*kb*(p1*v1+p2*v2)+pow(kb,2)*(pow(v1,2)+pow(v2,2)))*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+(kc*R33*((ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(pow(g,2)+pow(ka,2)*(pow(p1,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p1*v1+p3*v3)+pow(kb,2)*(pow(v1,2)+pow(v3,2)))*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+(R33*(k2*p2+v2)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(R23*(k2*p3+v3)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(kc*(g+ka*p3+kb*v3)*(-(R22*w1)+R21*w2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(k2*p3+v3)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(-(R22*w1)+R21*w2)+(kc*(ka*p2+kb*v2)*(-(R32*w1)+R31*w2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+(k2*p2+v2)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(-(R32*w1)+R31*w2)))/k3+((R32*(ka*p2+kb*v2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(R22*(g+ka*p3+kb*v3))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))*((ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))*(((ka*p2+kb*v2)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((3*ka*p1+3*kb*v1)*(ka*p2+kb*v2)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5))+(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))*(((g+ka*p3+kb*v3)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((3*ka*p1+3*kb*v1)*(g+ka*p3+kb*v3)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5))+(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))*((2*(ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(3*ka*p1+3*kb*v1)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5)+((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5))-(pow(ka*p1+kb*v1,2)/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)-1/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))*(ka*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)+kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R12*w1)+R11*w2)+R13*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2))))-((ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)+kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R22*w1)+R21*w2)+R23*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(ka*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))-kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R32*w1)+R31*w2)+R33*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5))-((R32*(ka*p1+kb*v1))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(R12*(g+ka*p3+kb*v3))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))*((ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))*(((ka*p2+kb*v2)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(3*ka*p2+3*kb*v2)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5))+(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))*(((g+ka*p3+kb*v3)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p2+kb*v2)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((3*ka*p2+3*kb*v2)*(g+ka*p3+kb*v3)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5))+(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))*((2*(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p2+kb*v2)*(3*ka*p2+3*kb*v2)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5)+((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5))-((ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)+kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R12*w1)+R11*w2)+R13*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)-(pow(ka*p2+kb*v2,2)/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)-1/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))*(ka*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)+kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R22*w1)+R21*w2)+R23*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2))))+((ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(ka*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))-kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R32*w1)+R31*w2)+R33*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5))+(-((R22*(ka*p1+kb*v1))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))+(R12*(ka*p2+kb*v2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))*(-((ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))*(((g+ka*p3+kb*v3)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(3*g+3*ka*p3+3*kb*v3)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5)))-(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))*(((g+ka*p3+kb*v3)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p2+kb*v2)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p2+kb*v2)*(3*g+3*ka*p3+3*kb*v3)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5))-(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))*((2*(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((g+ka*p3+kb*v3)*(3*g+3*ka*p3+3*kb*v3)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5)+((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5))+((ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(ka*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)+kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R12*w1)+R11*w2)+R13*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(ka*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)+kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R22*w1)+R21*w2)+R23*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+(-(pow(g+ka*p3+kb*v3,2)/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5))+1/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))*(ka*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))-kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R32*w1)+R31*w2)+R33*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2)))))+(((kc*R33*(ka*p2+kb*v2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(kc*R23*(g+ka*p3+kb*v3))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+R33*(k2*p2+v2)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-R23*(k2*p3+v3)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+(k3*(ka*p2+kb*v2)*((pow(ka,2)*(pow(p1,2)+pow(p2,2))+2*ka*kb*(p1*v1+p2*v2)+pow(kb,2)*(pow(v1,2)+pow(v2,2)))*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2)+(k3*(g+ka*p3+kb*v3)*((ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(pow(g,2)+pow(ka,2)*(pow(p1,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p1*v1+p3*v3)+pow(kb,2)*(pow(v1,2)+pow(v3,2)))*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2))*(-(R13*w1)+R11*w3))/k3-(((kc*R33*(ka*p1+kb*v1))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(kc*R13*(g+ka*p3+kb*v3))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+R33*(k2*p1+v1)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-R13*(k2*p3+v3)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+(k3*(g+ka*p3+kb*v3)*((ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(pow(g,2)+pow(ka,2)*(pow(p2,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p2*v2+p3*v3)+pow(kb,2)*(pow(v2,2)+pow(v3,2)))*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2)+(k3*(ka*p1+kb*v1)*((pow(ka,2)*(pow(p1,2)+pow(p2,2))+2*ka*kb*(p1*v1+p2*v2)+pow(kb,2)*(pow(v1,2)+pow(v2,2)))*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2))*(-(R23*w1)+R21*w3))/k3-((-((kc*R23*(ka*p1+kb*v1))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))+(kc*R13*(ka*p2+kb*v2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-R23*(k2*p1+v1)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+R13*(k2*p2+v2)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(k3*(ka*p2+kb*v2)*((ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(pow(g,2)+pow(ka,2)*(pow(p2,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p2*v2+p3*v3)+pow(kb,2)*(pow(v2,2)+pow(v3,2)))*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2)+(k3*(ka*p1+kb*v1)*((ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(pow(g,2)+pow(ka,2)*(pow(p1,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p1*v1+p3*v3)+pow(kb,2)*(pow(v1,2)+pow(v3,2)))*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2))*(-(R33*w1)+R31*w3))/k3)-J11*((k3*R12*(ka*p1+kb*v1))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+(k3*R22*(ka*p2+kb*v2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+(k3*R32*(g+ka*p3+kb*v3))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+kd*(-((R21*(kc*R33*(ka*p1+kb*v1)-kc*R13*(g+ka*p3+kb*v3)+R33*(k2*p1+v1)*(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-R13*(k2*p3+v3)*(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+(k3*(g+ka*p3+kb*v3)*((ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(pow(g,2)+pow(ka,2)*(pow(p2,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p2*v2+p3*v3)+pow(kb,2)*(pow(v2,2)+pow(v3,2)))*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+(k3*(ka*p1+kb*v1)*((pow(ka,2)*(pow(p1,2)+pow(p2,2))+2*ka*kb*(p1*v1+p2*v2)+pow(kb,2)*(pow(v1,2)+pow(v2,2)))*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5))+R31*(-(kc*R23*(ka*p1+kb*v1))+kc*R13*(ka*p2+kb*v2)-R23*(k2*p1+v1)*(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+R13*(k2*p2+v2)*(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(k3*(ka*p2+kb*v2)*((ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(pow(g,2)+pow(ka,2)*(pow(p2,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p2*v2+p3*v3)+pow(kb,2)*(pow(v2,2)+pow(v3,2)))*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+(k3*(ka*p1+kb*v1)*((ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(pow(g,2)+pow(ka,2)*(pow(p1,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p1*v1+p3*v3)+pow(kb,2)*(pow(v1,2)+pow(v3,2)))*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5))-R11*(kc*R33*(ka*p2+kb*v2)-kc*R23*(g+ka*p3+kb*v3)+R33*(k2*p2+v2)*(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-R23*(k2*p3+v3)*(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+(k3*(ka*p2+kb*v2)*((pow(ka,2)*(pow(p1,2)+pow(p2,2))+2*ka*kb*(p1*v1+p2*v2)+pow(kb,2)*(pow(v1,2)+pow(v2,2)))*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+(k3*(g+ka*p3+kb*v3)*((ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(pow(g,2)+pow(ka,2)*(pow(p1,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p1*v1+p3*v3)+pow(kb,2)*(pow(v1,2)+pow(v3,2)))*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)))/(k3*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))))+w1)-(R31*(-(R23*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(k2*v1-R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+R13*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(k2*v2-R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))-(kc*R23*((ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(pow(g,2)+pow(ka,2)*(pow(p2,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p2*v2+p3*v3)+pow(kb,2)*(pow(v2,2)+pow(v3,2)))*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+(kc*R13*((ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(pow(g,2)+pow(ka,2)*(pow(p1,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p1*v1+p3*v3)+pow(kb,2)*(pow(v1,2)+pow(v3,2)))*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)-(R23*(k2*p1+v1)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+(R13*(k2*p2+v2)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+(kc*(ka*p2+kb*v2)*(-(R12*w1)+R11*w2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+(k2*p2+v2)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(-(R12*w1)+R11*w2)-(kc*(ka*p1+kb*v1)*(-(R22*w1)+R21*w2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(k2*p1+v1)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(-(R22*w1)+R21*w2)))/k3-(R21*(R33*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(k2*v1-R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))-R13*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(g+k2*v3-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(kc*R33*((ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(pow(g,2)+pow(ka,2)*(pow(p2,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p2*v2+p3*v3)+pow(kb,2)*(pow(v2,2)+pow(v3,2)))*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+(kc*R13*((pow(ka,2)*(pow(p1,2)+pow(p2,2))+2*ka*kb*(p1*v1+p2*v2)+pow(kb,2)*(pow(v1,2)+pow(v2,2)))*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+(R33*(k2*p1+v1)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(R13*(k2*p3+v3)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(kc*(g+ka*p3+kb*v3)*(-(R12*w1)+R11*w2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(k2*p3+v3)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(-(R12*w1)+R11*w2)+(kc*(ka*p1+kb*v1)*(-(R32*w1)+R31*w2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+(k2*p1+v1)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(-(R32*w1)+R31*w2)))/k3+(R11*(R33*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(k2*v2-R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))-R23*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(g+k2*v3-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(kc*R23*((pow(ka,2)*(pow(p1,2)+pow(p2,2))+2*ka*kb*(p1*v1+p2*v2)+pow(kb,2)*(pow(v1,2)+pow(v2,2)))*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+(kc*R33*((ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(pow(g,2)+pow(ka,2)*(pow(p1,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p1*v1+p3*v3)+pow(kb,2)*(pow(v1,2)+pow(v3,2)))*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+(R33*(k2*p2+v2)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(R23*(k2*p3+v3)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(kc*(g+ka*p3+kb*v3)*(-(R22*w1)+R21*w2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(k2*p3+v3)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(-(R22*w1)+R21*w2)+(kc*(ka*p2+kb*v2)*(-(R32*w1)+R31*w2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+(k2*p2+v2)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(-(R32*w1)+R31*w2)))/k3-((R31*(ka*p2+kb*v2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(R21*(g+ka*p3+kb*v3))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))*((ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))*(((ka*p2+kb*v2)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((3*ka*p1+3*kb*v1)*(ka*p2+kb*v2)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5))+(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))*(((g+ka*p3+kb*v3)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((3*ka*p1+3*kb*v1)*(g+ka*p3+kb*v3)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5))+(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))*((2*(ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(3*ka*p1+3*kb*v1)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5)+((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5))-(pow(ka*p1+kb*v1,2)/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)-1/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))*(ka*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)+kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R12*w1)+R11*w2)+R13*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2))))-((ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)+kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R22*w1)+R21*w2)+R23*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(ka*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))-kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R32*w1)+R31*w2)+R33*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5))+((R31*(ka*p1+kb*v1))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(R11*(g+ka*p3+kb*v3))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))*((ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))*(((ka*p2+kb*v2)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(3*ka*p2+3*kb*v2)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5))+(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))*(((g+ka*p3+kb*v3)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p2+kb*v2)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((3*ka*p2+3*kb*v2)*(g+ka*p3+kb*v3)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5))+(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))*((2*(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p2+kb*v2)*(3*ka*p2+3*kb*v2)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5)+((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5))-((ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)+kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R12*w1)+R11*w2)+R13*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)-(pow(ka*p2+kb*v2,2)/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)-1/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))*(ka*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)+kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R22*w1)+R21*w2)+R23*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2))))+((ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(ka*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))-kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R32*w1)+R31*w2)+R33*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5))-(-((R21*(ka*p1+kb*v1))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))+(R11*(ka*p2+kb*v2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))*(-((ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))*(((g+ka*p3+kb*v3)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(3*g+3*ka*p3+3*kb*v3)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5)))-(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))*(((g+ka*p3+kb*v3)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p2+kb*v2)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p2+kb*v2)*(3*g+3*ka*p3+3*kb*v3)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5))-(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))*((2*(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((g+ka*p3+kb*v3)*(3*g+3*ka*p3+3*kb*v3)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5)+((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5))+((ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(ka*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)+kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R12*w1)+R11*w2)+R13*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(ka*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)+kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R22*w1)+R21*w2)+R23*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+(-(pow(g+ka*p3+kb*v3,2)/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5))+1/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))*(ka*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))-kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R32*w1)+R31*w2)+R33*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2)))))+(((kc*R33*(ka*p2+kb*v2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(kc*R23*(g+ka*p3+kb*v3))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+R33*(k2*p2+v2)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-R23*(k2*p3+v3)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+(k3*(ka*p2+kb*v2)*((pow(ka,2)*(pow(p1,2)+pow(p2,2))+2*ka*kb*(p1*v1+p2*v2)+pow(kb,2)*(pow(v1,2)+pow(v2,2)))*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2)+(k3*(g+ka*p3+kb*v3)*((ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(pow(g,2)+pow(ka,2)*(pow(p1,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p1*v1+p3*v3)+pow(kb,2)*(pow(v1,2)+pow(v3,2)))*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2))*(-(R13*w2)+R12*w3))/k3-(((kc*R33*(ka*p1+kb*v1))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(kc*R13*(g+ka*p3+kb*v3))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+R33*(k2*p1+v1)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-R13*(k2*p3+v3)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+(k3*(g+ka*p3+kb*v3)*((ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(pow(g,2)+pow(ka,2)*(pow(p2,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p2*v2+p3*v3)+pow(kb,2)*(pow(v2,2)+pow(v3,2)))*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2)+(k3*(ka*p1+kb*v1)*((pow(ka,2)*(pow(p1,2)+pow(p2,2))+2*ka*kb*(p1*v1+p2*v2)+pow(kb,2)*(pow(v1,2)+pow(v2,2)))*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2))*(-(R23*w2)+R22*w3))/k3-((-((kc*R23*(ka*p1+kb*v1))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))+(kc*R13*(ka*p2+kb*v2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-R23*(k2*p1+v1)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+R13*(k2*p2+v2)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(k3*(ka*p2+kb*v2)*((ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(pow(g,2)+pow(ka,2)*(pow(p2,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p2*v2+p3*v3)+pow(kb,2)*(pow(v2,2)+pow(v3,2)))*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2)+(k3*(ka*p1+kb*v1)*((ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(pow(g,2)+pow(ka,2)*(pow(p1,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p1*v1+p3*v3)+pow(kb,2)*(pow(v1,2)+pow(v3,2)))*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2))*(-(R33*w2)+R32*w3))/k3);
    double torque_pitch = w1*(-(J13*w1)+J11*w3)+w2*(-(J23*w1)+J12*w3)+w3*(-(J33*w1)+J13*w3)-J23*((g*ka*kb*p2*R12*w1-g*ka*kb*p1*R22*w1-g*ka*kb*p1*pow(R13,2)*R22*w1-pow(ka,2)*kb*p1*p3*pow(R13,2)*R22*w1+g*ka*kb*p1*R12*R13*R23*w1+pow(ka,2)*kb*p1*p3*R12*R13*R23*w1-g*ka*kb*p2*R13*R22*R23*w1-pow(ka,2)*kb*p2*p3*R13*R22*R23*w1+g*ka*kb*p2*R12*pow(R23,2)*w1+pow(ka,2)*kb*p2*p3*R12*pow(R23,2)*w1+pow(ka,2)*kb*p1*p2*pow(R13,2)*R32*w1-pow(ka,2)*kb*pow(p1,2)*R13*R23*R32*w1+pow(ka,2)*kb*pow(p2,2)*R13*R23*R32*w1-pow(ka,2)*kb*p1*p2*pow(R23,2)*R32*w1-pow(ka,2)*kb*p1*p2*R12*R13*R33*w1-pow(g,2)*kb*R13*R22*R33*w1+pow(ka,2)*kb*pow(p1,2)*R13*R22*R33*w1-2*g*ka*kb*p3*R13*R22*R33*w1-pow(ka,2)*kb*pow(p3,2)*R13*R22*R33*w1+pow(g,2)*kb*R12*R23*R33*w1-pow(ka,2)*kb*pow(p2,2)*R12*R23*R33*w1+2*g*ka*kb*p3*R12*R23*R33*w1+pow(ka,2)*kb*pow(p3,2)*R12*R23*R33*w1+pow(ka,2)*kb*p1*p2*R22*R23*R33*w1+g*ka*kb*p2*R13*R32*R33*w1+pow(ka,2)*kb*p2*p3*R13*R32*R33*w1-g*ka*kb*p1*R23*R32*R33*w1-pow(ka,2)*kb*p1*p3*R23*R32*R33*w1-g*ka*kb*p2*R12*pow(R33,2)*w1-pow(ka,2)*kb*p2*p3*R12*pow(R33,2)*w1+g*ka*kb*p1*R22*pow(R33,2)*w1+pow(ka,2)*kb*p1*p3*R22*pow(R33,2)*w1+g*ka*R22*v1*w1-g*pow(kb,2)*R22*v1*w1+pow(ka,2)*p3*R22*v1*w1-g*pow(kb,2)*pow(R13,2)*R22*v1*w1-ka*pow(kb,2)*p3*pow(R13,2)*R22*v1*w1+g*pow(kb,2)*R12*R13*R23*v1*w1+ka*pow(kb,2)*p3*R12*R13*R23*v1*w1-pow(ka,2)*p2*R32*v1*w1+ka*pow(kb,2)*p2*pow(R13,2)*R32*v1*w1-2*ka*pow(kb,2)*p1*R13*R23*R32*v1*w1-ka*pow(kb,2)*p2*pow(R23,2)*R32*v1*w1-ka*pow(kb,2)*p2*R12*R13*R33*v1*w1+2*ka*pow(kb,2)*p1*R13*R22*R33*v1*w1+ka*pow(kb,2)*p2*R22*R23*R33*v1*w1-g*pow(kb,2)*R23*R32*R33*v1*w1-ka*pow(kb,2)*p3*R23*R32*R33*v1*w1+g*pow(kb,2)*R22*pow(R33,2)*v1*w1+ka*pow(kb,2)*p3*R22*pow(R33,2)*v1*w1-pow(kb,3)*R13*R23*R32*pow(v1,2)*w1+pow(kb,3)*R13*R22*R33*pow(v1,2)*w1-g*ka*R12*v2*w1+g*pow(kb,2)*R12*v2*w1-pow(ka,2)*p3*R12*v2*w1-g*pow(kb,2)*R13*R22*R23*v2*w1-ka*pow(kb,2)*p3*R13*R22*R23*v2*w1+g*pow(kb,2)*R12*pow(R23,2)*v2*w1+ka*pow(kb,2)*p3*R12*pow(R23,2)*v2*w1+pow(ka,2)*p1*R32*v2*w1+ka*pow(kb,2)*p1*pow(R13,2)*R32*v2*w1+2*ka*pow(kb,2)*p2*R13*R23*R32*v2*w1-ka*pow(kb,2)*p1*pow(R23,2)*R32*v2*w1-ka*pow(kb,2)*p1*R12*R13*R33*v2*w1-2*ka*pow(kb,2)*p2*R12*R23*R33*v2*w1+ka*pow(kb,2)*p1*R22*R23*R33*v2*w1+g*pow(kb,2)*R13*R32*R33*v2*w1+ka*pow(kb,2)*p3*R13*R32*R33*v2*w1-g*pow(kb,2)*R12*pow(R33,2)*v2*w1-ka*pow(kb,2)*p3*R12*pow(R33,2)*v2*w1+pow(kb,3)*pow(R13,2)*R32*v1*v2*w1-pow(kb,3)*pow(R23,2)*R32*v1*v2*w1-pow(kb,3)*R12*R13*R33*v1*v2*w1+pow(kb,3)*R22*R23*R33*v1*v2*w1+pow(kb,3)*R13*R23*R32*pow(v2,2)*w1-pow(kb,3)*R12*R23*R33*pow(v2,2)*w1+pow(ka,2)*p2*R12*v3*w1-pow(ka,2)*p1*R22*v3*w1-ka*pow(kb,2)*p1*pow(R13,2)*R22*v3*w1+ka*pow(kb,2)*p1*R12*R13*R23*v3*w1-ka*pow(kb,2)*p2*R13*R22*R23*v3*w1+ka*pow(kb,2)*p2*R12*pow(R23,2)*v3*w1-2*g*pow(kb,2)*R13*R22*R33*v3*w1-2*ka*pow(kb,2)*p3*R13*R22*R33*v3*w1+2*g*pow(kb,2)*R12*R23*R33*v3*w1+2*ka*pow(kb,2)*p3*R12*R23*R33*v3*w1+ka*pow(kb,2)*p2*R13*R32*R33*v3*w1-ka*pow(kb,2)*p1*R23*R32*R33*v3*w1-ka*pow(kb,2)*p2*R12*pow(R33,2)*v3*w1+ka*pow(kb,2)*p1*R22*pow(R33,2)*v3*w1-pow(kb,3)*pow(R13,2)*R22*v1*v3*w1+pow(kb,3)*R12*R13*R23*v1*v3*w1-pow(kb,3)*R23*R32*R33*v1*v3*w1+pow(kb,3)*R22*pow(R33,2)*v1*v3*w1-pow(kb,3)*R13*R22*R23*v2*v3*w1+pow(kb,3)*R12*pow(R23,2)*v2*v3*w1+pow(kb,3)*R13*R32*R33*v2*v3*w1-pow(kb,3)*R12*pow(R33,2)*v2*v3*w1-pow(kb,3)*R13*R22*R33*pow(v3,2)*w1+pow(kb,3)*R12*R23*R33*pow(v3,2)*w1-g*ka*kb*p2*R11*w2+g*ka*kb*p1*R21*w2+g*ka*kb*p1*pow(R13,2)*R21*w2+pow(ka,2)*kb*p1*p3*pow(R13,2)*R21*w2-g*ka*kb*p1*R11*R13*R23*w2-pow(ka,2)*kb*p1*p3*R11*R13*R23*w2+g*ka*kb*p2*R13*R21*R23*w2+pow(ka,2)*kb*p2*p3*R13*R21*R23*w2-g*ka*kb*p2*R11*pow(R23,2)*w2-pow(ka,2)*kb*p2*p3*R11*pow(R23,2)*w2-pow(ka,2)*kb*p1*p2*pow(R13,2)*R31*w2+pow(ka,2)*kb*pow(p1,2)*R13*R23*R31*w2-pow(ka,2)*kb*pow(p2,2)*R13*R23*R31*w2+pow(ka,2)*kb*p1*p2*pow(R23,2)*R31*w2+pow(ka,2)*kb*p1*p2*R11*R13*R33*w2+pow(g,2)*kb*R13*R21*R33*w2-pow(ka,2)*kb*pow(p1,2)*R13*R21*R33*w2+2*g*ka*kb*p3*R13*R21*R33*w2+pow(ka,2)*kb*pow(p3,2)*R13*R21*R33*w2-pow(g,2)*kb*R11*R23*R33*w2+pow(ka,2)*kb*pow(p2,2)*R11*R23*R33*w2-2*g*ka*kb*p3*R11*R23*R33*w2-pow(ka,2)*kb*pow(p3,2)*R11*R23*R33*w2-pow(ka,2)*kb*p1*p2*R21*R23*R33*w2-g*ka*kb*p2*R13*R31*R33*w2-pow(ka,2)*kb*p2*p3*R13*R31*R33*w2+g*ka*kb*p1*R23*R31*R33*w2+pow(ka,2)*kb*p1*p3*R23*R31*R33*w2+g*ka*kb*p2*R11*pow(R33,2)*w2+pow(ka,2)*kb*p2*p3*R11*pow(R33,2)*w2-g*ka*kb*p1*R21*pow(R33,2)*w2-pow(ka,2)*kb*p1*p3*R21*pow(R33,2)*w2-g*ka*R21*v1*w2+g*pow(kb,2)*R21*v1*w2-pow(ka,2)*p3*R21*v1*w2+g*pow(kb,2)*pow(R13,2)*R21*v1*w2+ka*pow(kb,2)*p3*pow(R13,2)*R21*v1*w2-g*pow(kb,2)*R11*R13*R23*v1*w2-ka*pow(kb,2)*p3*R11*R13*R23*v1*w2+pow(ka,2)*p2*R31*v1*w2-ka*pow(kb,2)*p2*pow(R13,2)*R31*v1*w2+2*ka*pow(kb,2)*p1*R13*R23*R31*v1*w2+ka*pow(kb,2)*p2*pow(R23,2)*R31*v1*w2+ka*pow(kb,2)*p2*R11*R13*R33*v1*w2-2*ka*pow(kb,2)*p1*R13*R21*R33*v1*w2-ka*pow(kb,2)*p2*R21*R23*R33*v1*w2+g*pow(kb,2)*R23*R31*R33*v1*w2+ka*pow(kb,2)*p3*R23*R31*R33*v1*w2-g*pow(kb,2)*R21*pow(R33,2)*v1*w2-ka*pow(kb,2)*p3*R21*pow(R33,2)*v1*w2+pow(kb,3)*R13*R23*R31*pow(v1,2)*w2-pow(kb,3)*R13*R21*R33*pow(v1,2)*w2+g*ka*R11*v2*w2-g*pow(kb,2)*R11*v2*w2+pow(ka,2)*p3*R11*v2*w2+g*pow(kb,2)*R13*R21*R23*v2*w2+ka*pow(kb,2)*p3*R13*R21*R23*v2*w2-g*pow(kb,2)*R11*pow(R23,2)*v2*w2-ka*pow(kb,2)*p3*R11*pow(R23,2)*v2*w2-pow(ka,2)*p1*R31*v2*w2-ka*pow(kb,2)*p1*pow(R13,2)*R31*v2*w2-2*ka*pow(kb,2)*p2*R13*R23*R31*v2*w2+ka*pow(kb,2)*p1*pow(R23,2)*R31*v2*w2+ka*pow(kb,2)*p1*R11*R13*R33*v2*w2+2*ka*pow(kb,2)*p2*R11*R23*R33*v2*w2-ka*pow(kb,2)*p1*R21*R23*R33*v2*w2-g*pow(kb,2)*R13*R31*R33*v2*w2-ka*pow(kb,2)*p3*R13*R31*R33*v2*w2+g*pow(kb,2)*R11*pow(R33,2)*v2*w2+ka*pow(kb,2)*p3*R11*pow(R33,2)*v2*w2-pow(kb,3)*pow(R13,2)*R31*v1*v2*w2+pow(kb,3)*pow(R23,2)*R31*v1*v2*w2+pow(kb,3)*R11*R13*R33*v1*v2*w2-pow(kb,3)*R21*R23*R33*v1*v2*w2-pow(kb,3)*R13*R23*R31*pow(v2,2)*w2+pow(kb,3)*R11*R23*R33*pow(v2,2)*w2-pow(ka,2)*p2*R11*v3*w2+pow(ka,2)*p1*R21*v3*w2+ka*pow(kb,2)*p1*pow(R13,2)*R21*v3*w2-ka*pow(kb,2)*p1*R11*R13*R23*v3*w2+ka*pow(kb,2)*p2*R13*R21*R23*v3*w2-ka*pow(kb,2)*p2*R11*pow(R23,2)*v3*w2+2*g*pow(kb,2)*R13*R21*R33*v3*w2+2*ka*pow(kb,2)*p3*R13*R21*R33*v3*w2-2*g*pow(kb,2)*R11*R23*R33*v3*w2-2*ka*pow(kb,2)*p3*R11*R23*R33*v3*w2-ka*pow(kb,2)*p2*R13*R31*R33*v3*w2+ka*pow(kb,2)*p1*R23*R31*R33*v3*w2+ka*pow(kb,2)*p2*R11*pow(R33,2)*v3*w2-ka*pow(kb,2)*p1*R21*pow(R33,2)*v3*w2+pow(kb,3)*pow(R13,2)*R21*v1*v3*w2-pow(kb,3)*R11*R13*R23*v1*v3*w2+pow(kb,3)*R23*R31*R33*v1*v3*w2-pow(kb,3)*R21*pow(R33,2)*v1*v3*w2+pow(kb,3)*R13*R21*R23*v2*v3*w2-pow(kb,3)*R11*pow(R23,2)*v2*v3*w2-pow(kb,3)*R13*R31*R33*v2*v3*w2+pow(kb,3)*R11*pow(R33,2)*v2*v3*w2+pow(kb,3)*R13*R21*R33*pow(v3,2)*w2-pow(kb,3)*R11*R23*R33*pow(v3,2)*w2)/(pow(g,2)+pow(ka,2)*pow(p1,2)+pow(ka,2)*pow(p2,2)+2*g*ka*p3+pow(ka,2)*pow(p3,2)+2*ka*kb*p1*v1+pow(kb,2)*pow(v1,2)+2*ka*kb*p2*v2+pow(kb,2)*pow(v2,2)+2*g*kb*v3+2*ka*kb*p3*v3+pow(kb,2)*pow(v3,2))-((R33*(ka*p2+kb*v2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(R23*(g+ka*p3+kb*v3))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))*((ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))*(((ka*p2+kb*v2)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((3*ka*p1+3*kb*v1)*(ka*p2+kb*v2)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5))+(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))*(((g+ka*p3+kb*v3)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((3*ka*p1+3*kb*v1)*(g+ka*p3+kb*v3)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5))+(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))*((2*(ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(3*ka*p1+3*kb*v1)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5)+((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5))-(pow(ka*p1+kb*v1,2)/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)-1/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))*(ka*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)+kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R12*w1)+R11*w2)+R13*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2))))-((ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)+kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R22*w1)+R21*w2)+R23*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(ka*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))-kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R32*w1)+R31*w2)+R33*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5))+((R33*(ka*p1+kb*v1))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(R13*(g+ka*p3+kb*v3))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))*((ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))*(((ka*p2+kb*v2)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(3*ka*p2+3*kb*v2)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5))+(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))*(((g+ka*p3+kb*v3)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p2+kb*v2)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((3*ka*p2+3*kb*v2)*(g+ka*p3+kb*v3)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5))+(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))*((2*(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p2+kb*v2)*(3*ka*p2+3*kb*v2)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5)+((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5))-((ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)+kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R12*w1)+R11*w2)+R13*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)-(pow(ka*p2+kb*v2,2)/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)-1/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))*(ka*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)+kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R22*w1)+R21*w2)+R23*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2))))+((ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(ka*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))-kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R32*w1)+R31*w2)+R33*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5))-(-((R23*(ka*p1+kb*v1))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))+(R13*(ka*p2+kb*v2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))*(-((ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))*(((g+ka*p3+kb*v3)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(3*g+3*ka*p3+3*kb*v3)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5)))-(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))*(((g+ka*p3+kb*v3)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p2+kb*v2)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p2+kb*v2)*(3*g+3*ka*p3+3*kb*v3)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5))-(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))*((2*(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((g+ka*p3+kb*v3)*(3*g+3*ka*p3+3*kb*v3)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5)+((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5))+((ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(ka*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)+kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R12*w1)+R11*w2)+R13*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(ka*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)+kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R22*w1)+R21*w2)+R23*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+(-(pow(g+ka*p3+kb*v3,2)/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5))+1/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))*(ka*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))-kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R32*w1)+R31*w2)+R33*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2)))))+kd*(-((-(g*(-(pow(kb,2)*(-(R23*v1)+R13*v2))+ka*(-(kb*p2*R13)+kb*p1*R23-R23*v1+R13*v2)))+pow(ka,2)*(p3*R23*v1-p2*R33*v1-p3*R13*v2+p1*R33*v2+p2*R13*v3-p1*R23*v3))/(pow(g,2)+pow(ka,2)*(pow(p1,2)+pow(p2,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p1*v1+p2*v2+p3*v3)+pow(kb,2)*(pow(v1,2)+pow(v2,2)+pow(v3,2))))+w3))+J22*((k3*R11*(ka*p1+kb*v1))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+(k3*R21*(ka*p2+kb*v2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+(k3*R31*(g+ka*p3+kb*v3))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-kd*(-((R22*(kc*R33*(ka*p1+kb*v1)-kc*R13*(g+ka*p3+kb*v3)+R33*(k2*p1+v1)*(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-R13*(k2*p3+v3)*(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+(k3*(g+ka*p3+kb*v3)*((ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(pow(g,2)+pow(ka,2)*(pow(p2,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p2*v2+p3*v3)+pow(kb,2)*(pow(v2,2)+pow(v3,2)))*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+(k3*(ka*p1+kb*v1)*((pow(ka,2)*(pow(p1,2)+pow(p2,2))+2*ka*kb*(p1*v1+p2*v2)+pow(kb,2)*(pow(v1,2)+pow(v2,2)))*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5))+R32*(-(kc*R23*(ka*p1+kb*v1))+kc*R13*(ka*p2+kb*v2)-R23*(k2*p1+v1)*(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+R13*(k2*p2+v2)*(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(k3*(ka*p2+kb*v2)*((ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(pow(g,2)+pow(ka,2)*(pow(p2,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p2*v2+p3*v3)+pow(kb,2)*(pow(v2,2)+pow(v3,2)))*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+(k3*(ka*p1+kb*v1)*((ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(pow(g,2)+pow(ka,2)*(pow(p1,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p1*v1+p3*v3)+pow(kb,2)*(pow(v1,2)+pow(v3,2)))*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5))-R12*(kc*R33*(ka*p2+kb*v2)-kc*R23*(g+ka*p3+kb*v3)+R33*(k2*p2+v2)*(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-R23*(k2*p3+v3)*(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+(k3*(ka*p2+kb*v2)*((pow(ka,2)*(pow(p1,2)+pow(p2,2))+2*ka*kb*(p1*v1+p2*v2)+pow(kb,2)*(pow(v1,2)+pow(v2,2)))*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+(k3*(g+ka*p3+kb*v3)*((ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(pow(g,2)+pow(ka,2)*(pow(p1,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p1*v1+p3*v3)+pow(kb,2)*(pow(v1,2)+pow(v3,2)))*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)))/(k3*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))))+w2)+(R32*(-(R23*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(k2*v1-R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+R13*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(k2*v2-R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))-(kc*R23*((ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(pow(g,2)+pow(ka,2)*(pow(p2,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p2*v2+p3*v3)+pow(kb,2)*(pow(v2,2)+pow(v3,2)))*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+(kc*R13*((ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(pow(g,2)+pow(ka,2)*(pow(p1,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p1*v1+p3*v3)+pow(kb,2)*(pow(v1,2)+pow(v3,2)))*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)-(R23*(k2*p1+v1)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+(R13*(k2*p2+v2)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+(kc*(ka*p2+kb*v2)*(-(R12*w1)+R11*w2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+(k2*p2+v2)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(-(R12*w1)+R11*w2)-(kc*(ka*p1+kb*v1)*(-(R22*w1)+R21*w2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(k2*p1+v1)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(-(R22*w1)+R21*w2)))/k3+(R22*(R33*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(k2*v1-R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))-R13*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(g+k2*v3-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(kc*R33*((ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(pow(g,2)+pow(ka,2)*(pow(p2,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p2*v2+p3*v3)+pow(kb,2)*(pow(v2,2)+pow(v3,2)))*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+(kc*R13*((pow(ka,2)*(pow(p1,2)+pow(p2,2))+2*ka*kb*(p1*v1+p2*v2)+pow(kb,2)*(pow(v1,2)+pow(v2,2)))*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+(R33*(k2*p1+v1)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(R13*(k2*p3+v3)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(kc*(g+ka*p3+kb*v3)*(-(R12*w1)+R11*w2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(k2*p3+v3)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(-(R12*w1)+R11*w2)+(kc*(ka*p1+kb*v1)*(-(R32*w1)+R31*w2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+(k2*p1+v1)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(-(R32*w1)+R31*w2)))/k3-(R12*(R33*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(k2*v2-R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))-R23*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(g+k2*v3-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(kc*R23*((pow(ka,2)*(pow(p1,2)+pow(p2,2))+2*ka*kb*(p1*v1+p2*v2)+pow(kb,2)*(pow(v1,2)+pow(v2,2)))*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+(kc*R33*((ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(pow(g,2)+pow(ka,2)*(pow(p1,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p1*v1+p3*v3)+pow(kb,2)*(pow(v1,2)+pow(v3,2)))*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+(R33*(k2*p2+v2)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(R23*(k2*p3+v3)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(kc*(g+ka*p3+kb*v3)*(-(R22*w1)+R21*w2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(k2*p3+v3)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(-(R22*w1)+R21*w2)+(kc*(ka*p2+kb*v2)*(-(R32*w1)+R31*w2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+(k2*p2+v2)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(-(R32*w1)+R31*w2)))/k3+((R32*(ka*p2+kb*v2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(R22*(g+ka*p3+kb*v3))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))*((ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))*(((ka*p2+kb*v2)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((3*ka*p1+3*kb*v1)*(ka*p2+kb*v2)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5))+(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))*(((g+ka*p3+kb*v3)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((3*ka*p1+3*kb*v1)*(g+ka*p3+kb*v3)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5))+(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))*((2*(ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(3*ka*p1+3*kb*v1)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5)+((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5))-(pow(ka*p1+kb*v1,2)/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)-1/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))*(ka*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)+kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R12*w1)+R11*w2)+R13*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2))))-((ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)+kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R22*w1)+R21*w2)+R23*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(ka*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))-kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R32*w1)+R31*w2)+R33*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5))-((R32*(ka*p1+kb*v1))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(R12*(g+ka*p3+kb*v3))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))*((ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))*(((ka*p2+kb*v2)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(3*ka*p2+3*kb*v2)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5))+(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))*(((g+ka*p3+kb*v3)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p2+kb*v2)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((3*ka*p2+3*kb*v2)*(g+ka*p3+kb*v3)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5))+(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))*((2*(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p2+kb*v2)*(3*ka*p2+3*kb*v2)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5)+((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5))-((ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)+kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R12*w1)+R11*w2)+R13*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)-(pow(ka*p2+kb*v2,2)/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)-1/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))*(ka*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)+kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R22*w1)+R21*w2)+R23*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2))))+((ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(ka*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))-kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R32*w1)+R31*w2)+R33*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5))+(-((R22*(ka*p1+kb*v1))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))+(R12*(ka*p2+kb*v2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))*(-((ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))*(((g+ka*p3+kb*v3)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(3*g+3*ka*p3+3*kb*v3)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5)))-(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))*(((g+ka*p3+kb*v3)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p2+kb*v2)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p2+kb*v2)*(3*g+3*ka*p3+3*kb*v3)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5))-(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))*((2*(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((g+ka*p3+kb*v3)*(3*g+3*ka*p3+3*kb*v3)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5)+((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5))+((ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(ka*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)+kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R12*w1)+R11*w2)+R13*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(ka*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)+kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R22*w1)+R21*w2)+R23*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+(-(pow(g+ka*p3+kb*v3,2)/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5))+1/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))*(ka*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))-kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R32*w1)+R31*w2)+R33*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2)))))+(((kc*R33*(ka*p2+kb*v2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(kc*R23*(g+ka*p3+kb*v3))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+R33*(k2*p2+v2)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-R23*(k2*p3+v3)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+(k3*(ka*p2+kb*v2)*((pow(ka,2)*(pow(p1,2)+pow(p2,2))+2*ka*kb*(p1*v1+p2*v2)+pow(kb,2)*(pow(v1,2)+pow(v2,2)))*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2)+(k3*(g+ka*p3+kb*v3)*((ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(pow(g,2)+pow(ka,2)*(pow(p1,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p1*v1+p3*v3)+pow(kb,2)*(pow(v1,2)+pow(v3,2)))*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2))*(-(R13*w1)+R11*w3))/k3-(((kc*R33*(ka*p1+kb*v1))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(kc*R13*(g+ka*p3+kb*v3))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+R33*(k2*p1+v1)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-R13*(k2*p3+v3)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+(k3*(g+ka*p3+kb*v3)*((ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(pow(g,2)+pow(ka,2)*(pow(p2,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p2*v2+p3*v3)+pow(kb,2)*(pow(v2,2)+pow(v3,2)))*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2)+(k3*(ka*p1+kb*v1)*((pow(ka,2)*(pow(p1,2)+pow(p2,2))+2*ka*kb*(p1*v1+p2*v2)+pow(kb,2)*(pow(v1,2)+pow(v2,2)))*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2))*(-(R23*w1)+R21*w3))/k3-((-((kc*R23*(ka*p1+kb*v1))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))+(kc*R13*(ka*p2+kb*v2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-R23*(k2*p1+v1)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+R13*(k2*p2+v2)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(k3*(ka*p2+kb*v2)*((ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(pow(g,2)+pow(ka,2)*(pow(p2,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p2*v2+p3*v3)+pow(kb,2)*(pow(v2,2)+pow(v3,2)))*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2)+(k3*(ka*p1+kb*v1)*((ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(pow(g,2)+pow(ka,2)*(pow(p1,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p1*v1+p3*v3)+pow(kb,2)*(pow(v1,2)+pow(v3,2)))*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2))*(-(R33*w1)+R31*w3))/k3)-J12*((k3*R12*(ka*p1+kb*v1))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+(k3*R22*(ka*p2+kb*v2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+(k3*R32*(g+ka*p3+kb*v3))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+kd*(-((R21*(kc*R33*(ka*p1+kb*v1)-kc*R13*(g+ka*p3+kb*v3)+R33*(k2*p1+v1)*(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-R13*(k2*p3+v3)*(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+(k3*(g+ka*p3+kb*v3)*((ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(pow(g,2)+pow(ka,2)*(pow(p2,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p2*v2+p3*v3)+pow(kb,2)*(pow(v2,2)+pow(v3,2)))*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+(k3*(ka*p1+kb*v1)*((pow(ka,2)*(pow(p1,2)+pow(p2,2))+2*ka*kb*(p1*v1+p2*v2)+pow(kb,2)*(pow(v1,2)+pow(v2,2)))*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5))+R31*(-(kc*R23*(ka*p1+kb*v1))+kc*R13*(ka*p2+kb*v2)-R23*(k2*p1+v1)*(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+R13*(k2*p2+v2)*(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(k3*(ka*p2+kb*v2)*((ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(pow(g,2)+pow(ka,2)*(pow(p2,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p2*v2+p3*v3)+pow(kb,2)*(pow(v2,2)+pow(v3,2)))*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+(k3*(ka*p1+kb*v1)*((ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(pow(g,2)+pow(ka,2)*(pow(p1,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p1*v1+p3*v3)+pow(kb,2)*(pow(v1,2)+pow(v3,2)))*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5))-R11*(kc*R33*(ka*p2+kb*v2)-kc*R23*(g+ka*p3+kb*v3)+R33*(k2*p2+v2)*(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-R23*(k2*p3+v3)*(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+(k3*(ka*p2+kb*v2)*((pow(ka,2)*(pow(p1,2)+pow(p2,2))+2*ka*kb*(p1*v1+p2*v2)+pow(kb,2)*(pow(v1,2)+pow(v2,2)))*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+(k3*(g+ka*p3+kb*v3)*((ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(pow(g,2)+pow(ka,2)*(pow(p1,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p1*v1+p3*v3)+pow(kb,2)*(pow(v1,2)+pow(v3,2)))*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)))/(k3*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))))+w1)-(R31*(-(R23*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(k2*v1-R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+R13*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(k2*v2-R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))-(kc*R23*((ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(pow(g,2)+pow(ka,2)*(pow(p2,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p2*v2+p3*v3)+pow(kb,2)*(pow(v2,2)+pow(v3,2)))*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+(kc*R13*((ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(pow(g,2)+pow(ka,2)*(pow(p1,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p1*v1+p3*v3)+pow(kb,2)*(pow(v1,2)+pow(v3,2)))*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)-(R23*(k2*p1+v1)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+(R13*(k2*p2+v2)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+(kc*(ka*p2+kb*v2)*(-(R12*w1)+R11*w2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+(k2*p2+v2)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(-(R12*w1)+R11*w2)-(kc*(ka*p1+kb*v1)*(-(R22*w1)+R21*w2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(k2*p1+v1)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(-(R22*w1)+R21*w2)))/k3-(R21*(R33*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(k2*v1-R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))-R13*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(g+k2*v3-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(kc*R33*((ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(pow(g,2)+pow(ka,2)*(pow(p2,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p2*v2+p3*v3)+pow(kb,2)*(pow(v2,2)+pow(v3,2)))*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+(kc*R13*((pow(ka,2)*(pow(p1,2)+pow(p2,2))+2*ka*kb*(p1*v1+p2*v2)+pow(kb,2)*(pow(v1,2)+pow(v2,2)))*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+(R33*(k2*p1+v1)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(R13*(k2*p3+v3)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(kc*(g+ka*p3+kb*v3)*(-(R12*w1)+R11*w2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(k2*p3+v3)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(-(R12*w1)+R11*w2)+(kc*(ka*p1+kb*v1)*(-(R32*w1)+R31*w2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+(k2*p1+v1)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(-(R32*w1)+R31*w2)))/k3+(R11*(R33*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(k2*v2-R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))-R23*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(g+k2*v3-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(kc*R23*((pow(ka,2)*(pow(p1,2)+pow(p2,2))+2*ka*kb*(p1*v1+p2*v2)+pow(kb,2)*(pow(v1,2)+pow(v2,2)))*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+(kc*R33*((ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(pow(g,2)+pow(ka,2)*(pow(p1,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p1*v1+p3*v3)+pow(kb,2)*(pow(v1,2)+pow(v3,2)))*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+(R33*(k2*p2+v2)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(R23*(k2*p3+v3)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(kc*(g+ka*p3+kb*v3)*(-(R22*w1)+R21*w2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(k2*p3+v3)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(-(R22*w1)+R21*w2)+(kc*(ka*p2+kb*v2)*(-(R32*w1)+R31*w2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+(k2*p2+v2)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(-(R32*w1)+R31*w2)))/k3-((R31*(ka*p2+kb*v2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(R21*(g+ka*p3+kb*v3))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))*((ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))*(((ka*p2+kb*v2)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((3*ka*p1+3*kb*v1)*(ka*p2+kb*v2)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5))+(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))*(((g+ka*p3+kb*v3)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((3*ka*p1+3*kb*v1)*(g+ka*p3+kb*v3)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5))+(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))*((2*(ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(3*ka*p1+3*kb*v1)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5)+((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5))-(pow(ka*p1+kb*v1,2)/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)-1/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))*(ka*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)+kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R12*w1)+R11*w2)+R13*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2))))-((ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)+kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R22*w1)+R21*w2)+R23*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(ka*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))-kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R32*w1)+R31*w2)+R33*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5))+((R31*(ka*p1+kb*v1))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(R11*(g+ka*p3+kb*v3))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))*((ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))*(((ka*p2+kb*v2)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(3*ka*p2+3*kb*v2)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5))+(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))*(((g+ka*p3+kb*v3)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p2+kb*v2)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((3*ka*p2+3*kb*v2)*(g+ka*p3+kb*v3)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5))+(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))*((2*(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p2+kb*v2)*(3*ka*p2+3*kb*v2)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5)+((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5))-((ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)+kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R12*w1)+R11*w2)+R13*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)-(pow(ka*p2+kb*v2,2)/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)-1/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))*(ka*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)+kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R22*w1)+R21*w2)+R23*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2))))+((ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(ka*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))-kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R32*w1)+R31*w2)+R33*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5))-(-((R21*(ka*p1+kb*v1))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))+(R11*(ka*p2+kb*v2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))*(-((ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))*(((g+ka*p3+kb*v3)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(3*g+3*ka*p3+3*kb*v3)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5)))-(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))*(((g+ka*p3+kb*v3)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p2+kb*v2)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p2+kb*v2)*(3*g+3*ka*p3+3*kb*v3)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5))-(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))*((2*(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((g+ka*p3+kb*v3)*(3*g+3*ka*p3+3*kb*v3)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5)+((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5))+((ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(ka*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)+kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R12*w1)+R11*w2)+R13*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(ka*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)+kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R22*w1)+R21*w2)+R23*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+(-(pow(g+ka*p3+kb*v3,2)/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5))+1/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))*(ka*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))-kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R32*w1)+R31*w2)+R33*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2)))))+(((kc*R33*(ka*p2+kb*v2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(kc*R23*(g+ka*p3+kb*v3))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+R33*(k2*p2+v2)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-R23*(k2*p3+v3)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+(k3*(ka*p2+kb*v2)*((pow(ka,2)*(pow(p1,2)+pow(p2,2))+2*ka*kb*(p1*v1+p2*v2)+pow(kb,2)*(pow(v1,2)+pow(v2,2)))*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2)+(k3*(g+ka*p3+kb*v3)*((ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(pow(g,2)+pow(ka,2)*(pow(p1,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p1*v1+p3*v3)+pow(kb,2)*(pow(v1,2)+pow(v3,2)))*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2))*(-(R13*w2)+R12*w3))/k3-(((kc*R33*(ka*p1+kb*v1))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(kc*R13*(g+ka*p3+kb*v3))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+R33*(k2*p1+v1)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-R13*(k2*p3+v3)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+(k3*(g+ka*p3+kb*v3)*((ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(pow(g,2)+pow(ka,2)*(pow(p2,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p2*v2+p3*v3)+pow(kb,2)*(pow(v2,2)+pow(v3,2)))*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2)+(k3*(ka*p1+kb*v1)*((pow(ka,2)*(pow(p1,2)+pow(p2,2))+2*ka*kb*(p1*v1+p2*v2)+pow(kb,2)*(pow(v1,2)+pow(v2,2)))*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2))*(-(R23*w2)+R22*w3))/k3-((-((kc*R23*(ka*p1+kb*v1))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))+(kc*R13*(ka*p2+kb*v2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-R23*(k2*p1+v1)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+R13*(k2*p2+v2)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(k3*(ka*p2+kb*v2)*((ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(pow(g,2)+pow(ka,2)*(pow(p2,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p2*v2+p3*v3)+pow(kb,2)*(pow(v2,2)+pow(v3,2)))*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2)+(k3*(ka*p1+kb*v1)*((ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(pow(g,2)+pow(ka,2)*(pow(p1,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p1*v1+p3*v3)+pow(kb,2)*(pow(v1,2)+pow(v3,2)))*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2))*(-(R33*w2)+R32*w3))/k3);
    double torque_yaw = -(w1*(-(J12*w1)+J11*w2))-w2*(-(J22*w1)+J12*w2)-(-(J23*w1)+J13*w2)*w3-J33*((g*ka*kb*p2*R12*w1-g*ka*kb*p1*R22*w1-g*ka*kb*p1*pow(R13,2)*R22*w1-pow(ka,2)*kb*p1*p3*pow(R13,2)*R22*w1+g*ka*kb*p1*R12*R13*R23*w1+pow(ka,2)*kb*p1*p3*R12*R13*R23*w1-g*ka*kb*p2*R13*R22*R23*w1-pow(ka,2)*kb*p2*p3*R13*R22*R23*w1+g*ka*kb*p2*R12*pow(R23,2)*w1+pow(ka,2)*kb*p2*p3*R12*pow(R23,2)*w1+pow(ka,2)*kb*p1*p2*pow(R13,2)*R32*w1-pow(ka,2)*kb*pow(p1,2)*R13*R23*R32*w1+pow(ka,2)*kb*pow(p2,2)*R13*R23*R32*w1-pow(ka,2)*kb*p1*p2*pow(R23,2)*R32*w1-pow(ka,2)*kb*p1*p2*R12*R13*R33*w1-pow(g,2)*kb*R13*R22*R33*w1+pow(ka,2)*kb*pow(p1,2)*R13*R22*R33*w1-2*g*ka*kb*p3*R13*R22*R33*w1-pow(ka,2)*kb*pow(p3,2)*R13*R22*R33*w1+pow(g,2)*kb*R12*R23*R33*w1-pow(ka,2)*kb*pow(p2,2)*R12*R23*R33*w1+2*g*ka*kb*p3*R12*R23*R33*w1+pow(ka,2)*kb*pow(p3,2)*R12*R23*R33*w1+pow(ka,2)*kb*p1*p2*R22*R23*R33*w1+g*ka*kb*p2*R13*R32*R33*w1+pow(ka,2)*kb*p2*p3*R13*R32*R33*w1-g*ka*kb*p1*R23*R32*R33*w1-pow(ka,2)*kb*p1*p3*R23*R32*R33*w1-g*ka*kb*p2*R12*pow(R33,2)*w1-pow(ka,2)*kb*p2*p3*R12*pow(R33,2)*w1+g*ka*kb*p1*R22*pow(R33,2)*w1+pow(ka,2)*kb*p1*p3*R22*pow(R33,2)*w1+g*ka*R22*v1*w1-g*pow(kb,2)*R22*v1*w1+pow(ka,2)*p3*R22*v1*w1-g*pow(kb,2)*pow(R13,2)*R22*v1*w1-ka*pow(kb,2)*p3*pow(R13,2)*R22*v1*w1+g*pow(kb,2)*R12*R13*R23*v1*w1+ka*pow(kb,2)*p3*R12*R13*R23*v1*w1-pow(ka,2)*p2*R32*v1*w1+ka*pow(kb,2)*p2*pow(R13,2)*R32*v1*w1-2*ka*pow(kb,2)*p1*R13*R23*R32*v1*w1-ka*pow(kb,2)*p2*pow(R23,2)*R32*v1*w1-ka*pow(kb,2)*p2*R12*R13*R33*v1*w1+2*ka*pow(kb,2)*p1*R13*R22*R33*v1*w1+ka*pow(kb,2)*p2*R22*R23*R33*v1*w1-g*pow(kb,2)*R23*R32*R33*v1*w1-ka*pow(kb,2)*p3*R23*R32*R33*v1*w1+g*pow(kb,2)*R22*pow(R33,2)*v1*w1+ka*pow(kb,2)*p3*R22*pow(R33,2)*v1*w1-pow(kb,3)*R13*R23*R32*pow(v1,2)*w1+pow(kb,3)*R13*R22*R33*pow(v1,2)*w1-g*ka*R12*v2*w1+g*pow(kb,2)*R12*v2*w1-pow(ka,2)*p3*R12*v2*w1-g*pow(kb,2)*R13*R22*R23*v2*w1-ka*pow(kb,2)*p3*R13*R22*R23*v2*w1+g*pow(kb,2)*R12*pow(R23,2)*v2*w1+ka*pow(kb,2)*p3*R12*pow(R23,2)*v2*w1+pow(ka,2)*p1*R32*v2*w1+ka*pow(kb,2)*p1*pow(R13,2)*R32*v2*w1+2*ka*pow(kb,2)*p2*R13*R23*R32*v2*w1-ka*pow(kb,2)*p1*pow(R23,2)*R32*v2*w1-ka*pow(kb,2)*p1*R12*R13*R33*v2*w1-2*ka*pow(kb,2)*p2*R12*R23*R33*v2*w1+ka*pow(kb,2)*p1*R22*R23*R33*v2*w1+g*pow(kb,2)*R13*R32*R33*v2*w1+ka*pow(kb,2)*p3*R13*R32*R33*v2*w1-g*pow(kb,2)*R12*pow(R33,2)*v2*w1-ka*pow(kb,2)*p3*R12*pow(R33,2)*v2*w1+pow(kb,3)*pow(R13,2)*R32*v1*v2*w1-pow(kb,3)*pow(R23,2)*R32*v1*v2*w1-pow(kb,3)*R12*R13*R33*v1*v2*w1+pow(kb,3)*R22*R23*R33*v1*v2*w1+pow(kb,3)*R13*R23*R32*pow(v2,2)*w1-pow(kb,3)*R12*R23*R33*pow(v2,2)*w1+pow(ka,2)*p2*R12*v3*w1-pow(ka,2)*p1*R22*v3*w1-ka*pow(kb,2)*p1*pow(R13,2)*R22*v3*w1+ka*pow(kb,2)*p1*R12*R13*R23*v3*w1-ka*pow(kb,2)*p2*R13*R22*R23*v3*w1+ka*pow(kb,2)*p2*R12*pow(R23,2)*v3*w1-2*g*pow(kb,2)*R13*R22*R33*v3*w1-2*ka*pow(kb,2)*p3*R13*R22*R33*v3*w1+2*g*pow(kb,2)*R12*R23*R33*v3*w1+2*ka*pow(kb,2)*p3*R12*R23*R33*v3*w1+ka*pow(kb,2)*p2*R13*R32*R33*v3*w1-ka*pow(kb,2)*p1*R23*R32*R33*v3*w1-ka*pow(kb,2)*p2*R12*pow(R33,2)*v3*w1+ka*pow(kb,2)*p1*R22*pow(R33,2)*v3*w1-pow(kb,3)*pow(R13,2)*R22*v1*v3*w1+pow(kb,3)*R12*R13*R23*v1*v3*w1-pow(kb,3)*R23*R32*R33*v1*v3*w1+pow(kb,3)*R22*pow(R33,2)*v1*v3*w1-pow(kb,3)*R13*R22*R23*v2*v3*w1+pow(kb,3)*R12*pow(R23,2)*v2*v3*w1+pow(kb,3)*R13*R32*R33*v2*v3*w1-pow(kb,3)*R12*pow(R33,2)*v2*v3*w1-pow(kb,3)*R13*R22*R33*pow(v3,2)*w1+pow(kb,3)*R12*R23*R33*pow(v3,2)*w1-g*ka*kb*p2*R11*w2+g*ka*kb*p1*R21*w2+g*ka*kb*p1*pow(R13,2)*R21*w2+pow(ka,2)*kb*p1*p3*pow(R13,2)*R21*w2-g*ka*kb*p1*R11*R13*R23*w2-pow(ka,2)*kb*p1*p3*R11*R13*R23*w2+g*ka*kb*p2*R13*R21*R23*w2+pow(ka,2)*kb*p2*p3*R13*R21*R23*w2-g*ka*kb*p2*R11*pow(R23,2)*w2-pow(ka,2)*kb*p2*p3*R11*pow(R23,2)*w2-pow(ka,2)*kb*p1*p2*pow(R13,2)*R31*w2+pow(ka,2)*kb*pow(p1,2)*R13*R23*R31*w2-pow(ka,2)*kb*pow(p2,2)*R13*R23*R31*w2+pow(ka,2)*kb*p1*p2*pow(R23,2)*R31*w2+pow(ka,2)*kb*p1*p2*R11*R13*R33*w2+pow(g,2)*kb*R13*R21*R33*w2-pow(ka,2)*kb*pow(p1,2)*R13*R21*R33*w2+2*g*ka*kb*p3*R13*R21*R33*w2+pow(ka,2)*kb*pow(p3,2)*R13*R21*R33*w2-pow(g,2)*kb*R11*R23*R33*w2+pow(ka,2)*kb*pow(p2,2)*R11*R23*R33*w2-2*g*ka*kb*p3*R11*R23*R33*w2-pow(ka,2)*kb*pow(p3,2)*R11*R23*R33*w2-pow(ka,2)*kb*p1*p2*R21*R23*R33*w2-g*ka*kb*p2*R13*R31*R33*w2-pow(ka,2)*kb*p2*p3*R13*R31*R33*w2+g*ka*kb*p1*R23*R31*R33*w2+pow(ka,2)*kb*p1*p3*R23*R31*R33*w2+g*ka*kb*p2*R11*pow(R33,2)*w2+pow(ka,2)*kb*p2*p3*R11*pow(R33,2)*w2-g*ka*kb*p1*R21*pow(R33,2)*w2-pow(ka,2)*kb*p1*p3*R21*pow(R33,2)*w2-g*ka*R21*v1*w2+g*pow(kb,2)*R21*v1*w2-pow(ka,2)*p3*R21*v1*w2+g*pow(kb,2)*pow(R13,2)*R21*v1*w2+ka*pow(kb,2)*p3*pow(R13,2)*R21*v1*w2-g*pow(kb,2)*R11*R13*R23*v1*w2-ka*pow(kb,2)*p3*R11*R13*R23*v1*w2+pow(ka,2)*p2*R31*v1*w2-ka*pow(kb,2)*p2*pow(R13,2)*R31*v1*w2+2*ka*pow(kb,2)*p1*R13*R23*R31*v1*w2+ka*pow(kb,2)*p2*pow(R23,2)*R31*v1*w2+ka*pow(kb,2)*p2*R11*R13*R33*v1*w2-2*ka*pow(kb,2)*p1*R13*R21*R33*v1*w2-ka*pow(kb,2)*p2*R21*R23*R33*v1*w2+g*pow(kb,2)*R23*R31*R33*v1*w2+ka*pow(kb,2)*p3*R23*R31*R33*v1*w2-g*pow(kb,2)*R21*pow(R33,2)*v1*w2-ka*pow(kb,2)*p3*R21*pow(R33,2)*v1*w2+pow(kb,3)*R13*R23*R31*pow(v1,2)*w2-pow(kb,3)*R13*R21*R33*pow(v1,2)*w2+g*ka*R11*v2*w2-g*pow(kb,2)*R11*v2*w2+pow(ka,2)*p3*R11*v2*w2+g*pow(kb,2)*R13*R21*R23*v2*w2+ka*pow(kb,2)*p3*R13*R21*R23*v2*w2-g*pow(kb,2)*R11*pow(R23,2)*v2*w2-ka*pow(kb,2)*p3*R11*pow(R23,2)*v2*w2-pow(ka,2)*p1*R31*v2*w2-ka*pow(kb,2)*p1*pow(R13,2)*R31*v2*w2-2*ka*pow(kb,2)*p2*R13*R23*R31*v2*w2+ka*pow(kb,2)*p1*pow(R23,2)*R31*v2*w2+ka*pow(kb,2)*p1*R11*R13*R33*v2*w2+2*ka*pow(kb,2)*p2*R11*R23*R33*v2*w2-ka*pow(kb,2)*p1*R21*R23*R33*v2*w2-g*pow(kb,2)*R13*R31*R33*v2*w2-ka*pow(kb,2)*p3*R13*R31*R33*v2*w2+g*pow(kb,2)*R11*pow(R33,2)*v2*w2+ka*pow(kb,2)*p3*R11*pow(R33,2)*v2*w2-pow(kb,3)*pow(R13,2)*R31*v1*v2*w2+pow(kb,3)*pow(R23,2)*R31*v1*v2*w2+pow(kb,3)*R11*R13*R33*v1*v2*w2-pow(kb,3)*R21*R23*R33*v1*v2*w2-pow(kb,3)*R13*R23*R31*pow(v2,2)*w2+pow(kb,3)*R11*R23*R33*pow(v2,2)*w2-pow(ka,2)*p2*R11*v3*w2+pow(ka,2)*p1*R21*v3*w2+ka*pow(kb,2)*p1*pow(R13,2)*R21*v3*w2-ka*pow(kb,2)*p1*R11*R13*R23*v3*w2+ka*pow(kb,2)*p2*R13*R21*R23*v3*w2-ka*pow(kb,2)*p2*R11*pow(R23,2)*v3*w2+2*g*pow(kb,2)*R13*R21*R33*v3*w2+2*ka*pow(kb,2)*p3*R13*R21*R33*v3*w2-2*g*pow(kb,2)*R11*R23*R33*v3*w2-2*ka*pow(kb,2)*p3*R11*R23*R33*v3*w2-ka*pow(kb,2)*p2*R13*R31*R33*v3*w2+ka*pow(kb,2)*p1*R23*R31*R33*v3*w2+ka*pow(kb,2)*p2*R11*pow(R33,2)*v3*w2-ka*pow(kb,2)*p1*R21*pow(R33,2)*v3*w2+pow(kb,3)*pow(R13,2)*R21*v1*v3*w2-pow(kb,3)*R11*R13*R23*v1*v3*w2+pow(kb,3)*R23*R31*R33*v1*v3*w2-pow(kb,3)*R21*pow(R33,2)*v1*v3*w2+pow(kb,3)*R13*R21*R23*v2*v3*w2-pow(kb,3)*R11*pow(R23,2)*v2*v3*w2-pow(kb,3)*R13*R31*R33*v2*v3*w2+pow(kb,3)*R11*pow(R33,2)*v2*v3*w2+pow(kb,3)*R13*R21*R33*pow(v3,2)*w2-pow(kb,3)*R11*R23*R33*pow(v3,2)*w2)/(pow(g,2)+pow(ka,2)*pow(p1,2)+pow(ka,2)*pow(p2,2)+2*g*ka*p3+pow(ka,2)*pow(p3,2)+2*ka*kb*p1*v1+pow(kb,2)*pow(v1,2)+2*ka*kb*p2*v2+pow(kb,2)*pow(v2,2)+2*g*kb*v3+2*ka*kb*p3*v3+pow(kb,2)*pow(v3,2))-((R33*(ka*p2+kb*v2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(R23*(g+ka*p3+kb*v3))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))*((ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))*(((ka*p2+kb*v2)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((3*ka*p1+3*kb*v1)*(ka*p2+kb*v2)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5))+(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))*(((g+ka*p3+kb*v3)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((3*ka*p1+3*kb*v1)*(g+ka*p3+kb*v3)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5))+(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))*((2*(ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(3*ka*p1+3*kb*v1)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5)+((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5))-(pow(ka*p1+kb*v1,2)/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)-1/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))*(ka*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)+kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R12*w1)+R11*w2)+R13*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2))))-((ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)+kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R22*w1)+R21*w2)+R23*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(ka*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))-kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R32*w1)+R31*w2)+R33*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5))+((R33*(ka*p1+kb*v1))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(R13*(g+ka*p3+kb*v3))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))*((ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))*(((ka*p2+kb*v2)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(3*ka*p2+3*kb*v2)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5))+(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))*(((g+ka*p3+kb*v3)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p2+kb*v2)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((3*ka*p2+3*kb*v2)*(g+ka*p3+kb*v3)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5))+(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))*((2*(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p2+kb*v2)*(3*ka*p2+3*kb*v2)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5)+((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5))-((ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)+kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R12*w1)+R11*w2)+R13*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)-(pow(ka*p2+kb*v2,2)/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)-1/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))*(ka*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)+kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R22*w1)+R21*w2)+R23*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2))))+((ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(ka*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))-kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R32*w1)+R31*w2)+R33*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5))-(-((R23*(ka*p1+kb*v1))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))+(R13*(ka*p2+kb*v2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))*(-((ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))*(((g+ka*p3+kb*v3)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(3*g+3*ka*p3+3*kb*v3)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5)))-(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))*(((g+ka*p3+kb*v3)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p2+kb*v2)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p2+kb*v2)*(3*g+3*ka*p3+3*kb*v3)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5))-(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))*((2*(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((g+ka*p3+kb*v3)*(3*g+3*ka*p3+3*kb*v3)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5)+((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5))+((ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(ka*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)+kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R12*w1)+R11*w2)+R13*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(ka*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)+kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R22*w1)+R21*w2)+R23*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+(-(pow(g+ka*p3+kb*v3,2)/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5))+1/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))*(ka*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))-kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R32*w1)+R31*w2)+R33*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2)))))+kd*(-((-(g*(-(pow(kb,2)*(-(R23*v1)+R13*v2))+ka*(-(kb*p2*R13)+kb*p1*R23-R23*v1+R13*v2)))+pow(ka,2)*(p3*R23*v1-p2*R33*v1-p3*R13*v2+p1*R33*v2+p2*R13*v3-p1*R23*v3))/(pow(g,2)+pow(ka,2)*(pow(p1,2)+pow(p2,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p1*v1+p2*v2+p3*v3)+pow(kb,2)*(pow(v1,2)+pow(v2,2)+pow(v3,2))))+w3))+J23*((k3*R11*(ka*p1+kb*v1))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+(k3*R21*(ka*p2+kb*v2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+(k3*R31*(g+ka*p3+kb*v3))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-kd*(-((R22*(kc*R33*(ka*p1+kb*v1)-kc*R13*(g+ka*p3+kb*v3)+R33*(k2*p1+v1)*(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-R13*(k2*p3+v3)*(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+(k3*(g+ka*p3+kb*v3)*((ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(pow(g,2)+pow(ka,2)*(pow(p2,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p2*v2+p3*v3)+pow(kb,2)*(pow(v2,2)+pow(v3,2)))*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+(k3*(ka*p1+kb*v1)*((pow(ka,2)*(pow(p1,2)+pow(p2,2))+2*ka*kb*(p1*v1+p2*v2)+pow(kb,2)*(pow(v1,2)+pow(v2,2)))*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5))+R32*(-(kc*R23*(ka*p1+kb*v1))+kc*R13*(ka*p2+kb*v2)-R23*(k2*p1+v1)*(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+R13*(k2*p2+v2)*(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(k3*(ka*p2+kb*v2)*((ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(pow(g,2)+pow(ka,2)*(pow(p2,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p2*v2+p3*v3)+pow(kb,2)*(pow(v2,2)+pow(v3,2)))*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+(k3*(ka*p1+kb*v1)*((ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(pow(g,2)+pow(ka,2)*(pow(p1,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p1*v1+p3*v3)+pow(kb,2)*(pow(v1,2)+pow(v3,2)))*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5))-R12*(kc*R33*(ka*p2+kb*v2)-kc*R23*(g+ka*p3+kb*v3)+R33*(k2*p2+v2)*(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-R23*(k2*p3+v3)*(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+(k3*(ka*p2+kb*v2)*((pow(ka,2)*(pow(p1,2)+pow(p2,2))+2*ka*kb*(p1*v1+p2*v2)+pow(kb,2)*(pow(v1,2)+pow(v2,2)))*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+(k3*(g+ka*p3+kb*v3)*((ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(pow(g,2)+pow(ka,2)*(pow(p1,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p1*v1+p3*v3)+pow(kb,2)*(pow(v1,2)+pow(v3,2)))*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)))/(k3*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))))+w2)+(R32*(-(R23*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(k2*v1-R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+R13*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(k2*v2-R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))-(kc*R23*((ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(pow(g,2)+pow(ka,2)*(pow(p2,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p2*v2+p3*v3)+pow(kb,2)*(pow(v2,2)+pow(v3,2)))*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+(kc*R13*((ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(pow(g,2)+pow(ka,2)*(pow(p1,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p1*v1+p3*v3)+pow(kb,2)*(pow(v1,2)+pow(v3,2)))*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)-(R23*(k2*p1+v1)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+(R13*(k2*p2+v2)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+(kc*(ka*p2+kb*v2)*(-(R12*w1)+R11*w2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+(k2*p2+v2)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(-(R12*w1)+R11*w2)-(kc*(ka*p1+kb*v1)*(-(R22*w1)+R21*w2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(k2*p1+v1)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(-(R22*w1)+R21*w2)))/k3+(R22*(R33*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(k2*v1-R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))-R13*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(g+k2*v3-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(kc*R33*((ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(pow(g,2)+pow(ka,2)*(pow(p2,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p2*v2+p3*v3)+pow(kb,2)*(pow(v2,2)+pow(v3,2)))*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+(kc*R13*((pow(ka,2)*(pow(p1,2)+pow(p2,2))+2*ka*kb*(p1*v1+p2*v2)+pow(kb,2)*(pow(v1,2)+pow(v2,2)))*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+(R33*(k2*p1+v1)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(R13*(k2*p3+v3)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(kc*(g+ka*p3+kb*v3)*(-(R12*w1)+R11*w2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(k2*p3+v3)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(-(R12*w1)+R11*w2)+(kc*(ka*p1+kb*v1)*(-(R32*w1)+R31*w2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+(k2*p1+v1)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(-(R32*w1)+R31*w2)))/k3-(R12*(R33*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(k2*v2-R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))-R23*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(g+k2*v3-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(kc*R23*((pow(ka,2)*(pow(p1,2)+pow(p2,2))+2*ka*kb*(p1*v1+p2*v2)+pow(kb,2)*(pow(v1,2)+pow(v2,2)))*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+(kc*R33*((ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(pow(g,2)+pow(ka,2)*(pow(p1,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p1*v1+p3*v3)+pow(kb,2)*(pow(v1,2)+pow(v3,2)))*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+(R33*(k2*p2+v2)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(R23*(k2*p3+v3)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(kc*(g+ka*p3+kb*v3)*(-(R22*w1)+R21*w2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(k2*p3+v3)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(-(R22*w1)+R21*w2)+(kc*(ka*p2+kb*v2)*(-(R32*w1)+R31*w2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+(k2*p2+v2)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(-(R32*w1)+R31*w2)))/k3+((R32*(ka*p2+kb*v2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(R22*(g+ka*p3+kb*v3))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))*((ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))*(((ka*p2+kb*v2)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((3*ka*p1+3*kb*v1)*(ka*p2+kb*v2)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5))+(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))*(((g+ka*p3+kb*v3)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((3*ka*p1+3*kb*v1)*(g+ka*p3+kb*v3)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5))+(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))*((2*(ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(3*ka*p1+3*kb*v1)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5)+((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5))-(pow(ka*p1+kb*v1,2)/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)-1/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))*(ka*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)+kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R12*w1)+R11*w2)+R13*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2))))-((ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)+kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R22*w1)+R21*w2)+R23*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(ka*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))-kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R32*w1)+R31*w2)+R33*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5))-((R32*(ka*p1+kb*v1))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(R12*(g+ka*p3+kb*v3))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))*((ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))*(((ka*p2+kb*v2)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(3*ka*p2+3*kb*v2)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5))+(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))*(((g+ka*p3+kb*v3)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p2+kb*v2)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((3*ka*p2+3*kb*v2)*(g+ka*p3+kb*v3)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5))+(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))*((2*(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p2+kb*v2)*(3*ka*p2+3*kb*v2)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5)+((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5))-((ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)+kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R12*w1)+R11*w2)+R13*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)-(pow(ka*p2+kb*v2,2)/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)-1/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))*(ka*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)+kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R22*w1)+R21*w2)+R23*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2))))+((ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(ka*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))-kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R32*w1)+R31*w2)+R33*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5))+(-((R22*(ka*p1+kb*v1))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))+(R12*(ka*p2+kb*v2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))*(-((ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))*(((g+ka*p3+kb*v3)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(3*g+3*ka*p3+3*kb*v3)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5)))-(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))*(((g+ka*p3+kb*v3)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p2+kb*v2)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p2+kb*v2)*(3*g+3*ka*p3+3*kb*v3)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5))-(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))*((2*(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((g+ka*p3+kb*v3)*(3*g+3*ka*p3+3*kb*v3)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5)+((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5))+((ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(ka*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)+kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R12*w1)+R11*w2)+R13*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(ka*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)+kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R22*w1)+R21*w2)+R23*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+(-(pow(g+ka*p3+kb*v3,2)/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5))+1/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))*(ka*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))-kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R32*w1)+R31*w2)+R33*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2)))))+(((kc*R33*(ka*p2+kb*v2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(kc*R23*(g+ka*p3+kb*v3))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+R33*(k2*p2+v2)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-R23*(k2*p3+v3)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+(k3*(ka*p2+kb*v2)*((pow(ka,2)*(pow(p1,2)+pow(p2,2))+2*ka*kb*(p1*v1+p2*v2)+pow(kb,2)*(pow(v1,2)+pow(v2,2)))*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2)+(k3*(g+ka*p3+kb*v3)*((ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(pow(g,2)+pow(ka,2)*(pow(p1,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p1*v1+p3*v3)+pow(kb,2)*(pow(v1,2)+pow(v3,2)))*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2))*(-(R13*w1)+R11*w3))/k3-(((kc*R33*(ka*p1+kb*v1))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(kc*R13*(g+ka*p3+kb*v3))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+R33*(k2*p1+v1)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-R13*(k2*p3+v3)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+(k3*(g+ka*p3+kb*v3)*((ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(pow(g,2)+pow(ka,2)*(pow(p2,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p2*v2+p3*v3)+pow(kb,2)*(pow(v2,2)+pow(v3,2)))*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2)+(k3*(ka*p1+kb*v1)*((pow(ka,2)*(pow(p1,2)+pow(p2,2))+2*ka*kb*(p1*v1+p2*v2)+pow(kb,2)*(pow(v1,2)+pow(v2,2)))*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2))*(-(R23*w1)+R21*w3))/k3-((-((kc*R23*(ka*p1+kb*v1))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))+(kc*R13*(ka*p2+kb*v2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-R23*(k2*p1+v1)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+R13*(k2*p2+v2)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(k3*(ka*p2+kb*v2)*((ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(pow(g,2)+pow(ka,2)*(pow(p2,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p2*v2+p3*v3)+pow(kb,2)*(pow(v2,2)+pow(v3,2)))*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2)+(k3*(ka*p1+kb*v1)*((ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(pow(g,2)+pow(ka,2)*(pow(p1,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p1*v1+p3*v3)+pow(kb,2)*(pow(v1,2)+pow(v3,2)))*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2))*(-(R33*w1)+R31*w3))/k3)-J13*((k3*R12*(ka*p1+kb*v1))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+(k3*R22*(ka*p2+kb*v2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+(k3*R32*(g+ka*p3+kb*v3))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+kd*(-((R21*(kc*R33*(ka*p1+kb*v1)-kc*R13*(g+ka*p3+kb*v3)+R33*(k2*p1+v1)*(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-R13*(k2*p3+v3)*(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+(k3*(g+ka*p3+kb*v3)*((ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(pow(g,2)+pow(ka,2)*(pow(p2,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p2*v2+p3*v3)+pow(kb,2)*(pow(v2,2)+pow(v3,2)))*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+(k3*(ka*p1+kb*v1)*((pow(ka,2)*(pow(p1,2)+pow(p2,2))+2*ka*kb*(p1*v1+p2*v2)+pow(kb,2)*(pow(v1,2)+pow(v2,2)))*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5))+R31*(-(kc*R23*(ka*p1+kb*v1))+kc*R13*(ka*p2+kb*v2)-R23*(k2*p1+v1)*(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+R13*(k2*p2+v2)*(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(k3*(ka*p2+kb*v2)*((ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(pow(g,2)+pow(ka,2)*(pow(p2,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p2*v2+p3*v3)+pow(kb,2)*(pow(v2,2)+pow(v3,2)))*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+(k3*(ka*p1+kb*v1)*((ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(pow(g,2)+pow(ka,2)*(pow(p1,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p1*v1+p3*v3)+pow(kb,2)*(pow(v1,2)+pow(v3,2)))*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5))-R11*(kc*R33*(ka*p2+kb*v2)-kc*R23*(g+ka*p3+kb*v3)+R33*(k2*p2+v2)*(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-R23*(k2*p3+v3)*(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+(k3*(ka*p2+kb*v2)*((pow(ka,2)*(pow(p1,2)+pow(p2,2))+2*ka*kb*(p1*v1+p2*v2)+pow(kb,2)*(pow(v1,2)+pow(v2,2)))*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+(k3*(g+ka*p3+kb*v3)*((ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(pow(g,2)+pow(ka,2)*(pow(p1,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p1*v1+p3*v3)+pow(kb,2)*(pow(v1,2)+pow(v3,2)))*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)))/(k3*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))))+w1)-(R31*(-(R23*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(k2*v1-R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+R13*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(k2*v2-R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))-(kc*R23*((ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(pow(g,2)+pow(ka,2)*(pow(p2,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p2*v2+p3*v3)+pow(kb,2)*(pow(v2,2)+pow(v3,2)))*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+(kc*R13*((ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(pow(g,2)+pow(ka,2)*(pow(p1,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p1*v1+p3*v3)+pow(kb,2)*(pow(v1,2)+pow(v3,2)))*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)-(R23*(k2*p1+v1)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+(R13*(k2*p2+v2)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+(kc*(ka*p2+kb*v2)*(-(R12*w1)+R11*w2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+(k2*p2+v2)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(-(R12*w1)+R11*w2)-(kc*(ka*p1+kb*v1)*(-(R22*w1)+R21*w2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(k2*p1+v1)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(-(R22*w1)+R21*w2)))/k3-(R21*(R33*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(k2*v1-R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))-R13*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(g+k2*v3-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(kc*R33*((ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(pow(g,2)+pow(ka,2)*(pow(p2,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p2*v2+p3*v3)+pow(kb,2)*(pow(v2,2)+pow(v3,2)))*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+(kc*R13*((pow(ka,2)*(pow(p1,2)+pow(p2,2))+2*ka*kb*(p1*v1+p2*v2)+pow(kb,2)*(pow(v1,2)+pow(v2,2)))*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+(R33*(k2*p1+v1)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(R13*(k2*p3+v3)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(kc*(g+ka*p3+kb*v3)*(-(R12*w1)+R11*w2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(k2*p3+v3)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(-(R12*w1)+R11*w2)+(kc*(ka*p1+kb*v1)*(-(R32*w1)+R31*w2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+(k2*p1+v1)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(-(R32*w1)+R31*w2)))/k3+(R11*(R33*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(k2*v2-R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))-R23*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(g+k2*v3-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(kc*R23*((pow(ka,2)*(pow(p1,2)+pow(p2,2))+2*ka*kb*(p1*v1+p2*v2)+pow(kb,2)*(pow(v1,2)+pow(v2,2)))*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+(kc*R33*((ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(pow(g,2)+pow(ka,2)*(pow(p1,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p1*v1+p3*v3)+pow(kb,2)*(pow(v1,2)+pow(v3,2)))*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+(R33*(k2*p2+v2)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(R23*(k2*p3+v3)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(kc*(g+ka*p3+kb*v3)*(-(R22*w1)+R21*w2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(k2*p3+v3)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(-(R22*w1)+R21*w2)+(kc*(ka*p2+kb*v2)*(-(R32*w1)+R31*w2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+(k2*p2+v2)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))*(-(R32*w1)+R31*w2)))/k3-((R31*(ka*p2+kb*v2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(R21*(g+ka*p3+kb*v3))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))*((ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))*(((ka*p2+kb*v2)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((3*ka*p1+3*kb*v1)*(ka*p2+kb*v2)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5))+(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))*(((g+ka*p3+kb*v3)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((3*ka*p1+3*kb*v1)*(g+ka*p3+kb*v3)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5))+(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))*((2*(ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(3*ka*p1+3*kb*v1)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5)+((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5))-(pow(ka*p1+kb*v1,2)/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)-1/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))*(ka*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)+kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R12*w1)+R11*w2)+R13*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2))))-((ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)+kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R22*w1)+R21*w2)+R23*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(ka*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))-kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R32*w1)+R31*w2)+R33*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5))+((R31*(ka*p1+kb*v1))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(R11*(g+ka*p3+kb*v3))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))*((ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))*(((ka*p2+kb*v2)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(3*ka*p2+3*kb*v2)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5))+(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))*(((g+ka*p3+kb*v3)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p2+kb*v2)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((3*ka*p2+3*kb*v2)*(g+ka*p3+kb*v3)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5))+(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))*((2*(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p2+kb*v2)*(3*ka*p2+3*kb*v2)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5)+((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5))-((ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)+kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R12*w1)+R11*w2)+R13*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)-(pow(ka*p2+kb*v2,2)/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)-1/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))*(ka*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)+kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R22*w1)+R21*w2)+R23*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2))))+((ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(ka*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))-kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R32*w1)+R31*w2)+R33*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5))-(-((R21*(ka*p1+kb*v1))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))+(R11*(ka*p2+kb*v2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))*(-((ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))*(((g+ka*p3+kb*v3)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p1+kb*v1)*(3*g+3*ka*p3+3*kb*v3)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5)))-(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))*(((g+ka*p3+kb*v3)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p2+kb*v2)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p2+kb*v2)*(3*g+3*ka*p3+3*kb*v3)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5))-(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))*((2*(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((g+ka*p3+kb*v3)*(3*g+3*ka*p3+3*kb*v3)*((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2.5)+((ka*p1+kb*v1)*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(ka*p2+kb*v2)*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+(g+ka*p3+kb*v3)*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5))+((ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(ka*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)+kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R12*w1)+R11*w2)+R13*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+((ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(ka*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)+kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R22*w1)+R21*w2)+R23*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5)+(-(pow(g+ka*p3+kb*v3,2)/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),1.5))+1/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))*(ka*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))-kb*((ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)*(-(R32*w1)+R31*w2)+R33*(R13*(ka*v1-kb*R13*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R23*(ka*v2-kb*R23*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3))+R33*(ka*v3+kb*(g-R33*(ka*p1*R13+ka*p2*R23+g*R33+ka*p3*R33+kb*R13*v1+kb*R23*v2+kb*R33*v3)))+(ka*p1+kb*v1)*(-(R12*w1)+R11*w2)+(ka*p2+kb*v2)*(-(R22*w1)+R21*w2)+(g+ka*p3+kb*v3)*(-(R32*w1)+R31*w2)))))+(((kc*R33*(ka*p2+kb*v2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(kc*R23*(g+ka*p3+kb*v3))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+R33*(k2*p2+v2)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-R23*(k2*p3+v3)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+(k3*(ka*p2+kb*v2)*((pow(ka,2)*(pow(p1,2)+pow(p2,2))+2*ka*kb*(p1*v1+p2*v2)+pow(kb,2)*(pow(v1,2)+pow(v2,2)))*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2)+(k3*(g+ka*p3+kb*v3)*((ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(pow(g,2)+pow(ka,2)*(pow(p1,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p1*v1+p3*v3)+pow(kb,2)*(pow(v1,2)+pow(v3,2)))*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2))*(-(R13*w2)+R12*w3))/k3-(((kc*R33*(ka*p1+kb*v1))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(kc*R13*(g+ka*p3+kb*v3))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+R33*(k2*p1+v1)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-R13*(k2*p3+v3)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+(k3*(g+ka*p3+kb*v3)*((ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(pow(g,2)+pow(ka,2)*(pow(p2,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p2*v2+p3*v3)+pow(kb,2)*(pow(v2,2)+pow(v3,2)))*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2)+(k3*(ka*p1+kb*v1)*((pow(ka,2)*(pow(p1,2)+pow(p2,2))+2*ka*kb*(p1*v1+p2*v2)+pow(kb,2)*(pow(v1,2)+pow(v2,2)))*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2))*(-(R23*w2)+R22*w3))/k3-((-((kc*R23*(ka*p1+kb*v1))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2)))+(kc*R13*(ka*p2+kb*v2))/sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-R23*(k2*p1+v1)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))+R13*(k2*p2+v2)*sqrt(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2))-(k3*(ka*p2+kb*v2)*((ka*p1+kb*v1)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))+(pow(g,2)+pow(ka,2)*(pow(p2,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p2*v2+p3*v3)+pow(kb,2)*(pow(v2,2)+pow(v3,2)))*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2)+(k3*(ka*p1+kb*v1)*((ka*p2+kb*v2)*(g+ka*p3+kb*v3)*(g*kb*(-1+pow(R33,2))-ka*(-(kb*R33*(p1*R13+p2*R23+p3*R33))+v3)+pow(kb,2)*R33*(R13*v1+R23*v2+R33*v3))-(ka*p1+kb*v1)*(ka*p2+kb*v2)*(ka*(-(kb*R13*(p1*R13+p2*R23+p3*R33))+v1)-kb*R13*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))+(pow(g,2)+pow(ka,2)*(pow(p1,2)+pow(p3,2))+2*g*(ka*p3+kb*v3)+2*ka*kb*(p1*v1+p3*v3)+pow(kb,2)*(pow(v1,2)+pow(v3,2)))*(ka*(-(kb*R23*(p1*R13+p2*R23+p3*R33))+v2)-kb*R23*(g*R33+kb*(R13*v1+R23*v2+R33*v3)))))/pow(pow(ka*p1+kb*v1,2)+pow(ka*p2+kb*v2,2)+pow(g+ka*p3+kb*v3,2),2))*(-(R33*w2)+R32*w3))/k3);
    
    // Convert physical torque into relative form (range from -1 to 1)
    torque_abs_to_rel(thrust, torque_roll, torque_pitch, torque_yaw);

    //print_util_dbg_putfloat(p1, 4);
    //print_util_dbg_print("\r\n");

    // Assign the control law
    quad_nonlinear_control->thrust_command->thrust = thrust;
    quad_nonlinear_control->torque_command->xyz[0] = torque_roll;
    quad_nonlinear_control->torque_command->xyz[1] = torque_pitch;
    quad_nonlinear_control->torque_command->xyz[2] = torque_yaw;

}

void quat_to_rot(quat_t quaternion, Mat<3,3>& res)
{
	res[0] = 1 - 2*pow(quaternion.v[1],2) - 2*pow(quaternion.v[2],2);
	res[1] = 2*quaternion.v[0]*quaternion.v[1] - 2*quaternion.v[2]*quaternion.s;
	res[2] = 2*quaternion.v[0]*quaternion.v[2] + 2*quaternion.v[1]*quaternion.s;
	res[3] = 2*quaternion.v[0]*quaternion.v[1] + 2*quaternion.v[2]*quaternion.s;
	res[4] = 1 - 2*pow(quaternion.v[0],2) - 2*pow(quaternion.v[2],2);
	res[5] = 2*quaternion.v[1]*quaternion.v[2] - 2*quaternion.v[0]*quaternion.s;
	res[6] = 2*quaternion.v[0]*quaternion.v[2] - 2*quaternion.v[1]*quaternion.s;
	res[7] = 2*quaternion.v[1]*quaternion.v[2] + 2*quaternion.v[0]*quaternion.s;
	res[8] = 1 - 2*pow(quaternion.v[0],2) - 2*pow(quaternion.v[1],2);
}

void torque_abs_to_rel(double& thrust, double& torque_roll, double& torque_pitch, double& torque_yaw)
{
    dynamic_model_quad_diag_conf_t conf = dynamic_model_quad_diag_default_config();
    double u1 = thrust;
    double u2 = torque_roll;
    double u3 = torque_pitch;
    double u4 = torque_yaw;
    double c1 = 1 / (2 * conf.air_density * conf.rotor_foil_area * pow(conf.rotor_diameter * PI * conf.rotor_rpm_gain / 60.0, 2));
    double c2 = c1 / (10.0 * conf.rotor_cd);
    thrust = 0.25*sqrt(c1*u1 - c1*u2 - c1*u3 - c2*u4) + 0.25*sqrt(c1*u1 + c1*u2 + c1*u3 - c2*u4) + 0.25*sqrt(c1*u1 + c1*u2 - c1*u3 + c2*u4) + 0.25*sqrt(c1*u1 - c1*u2 + c1*u3 + c2*u4) + conf.rotor_rpm_offset;
    torque_roll = -0.25*sqrt(c1*u1 - c1*u2 - c1*u3 - c2*u4) + 0.25*sqrt(c1*u1 + c1*u2 + c1*u3 - c2*u4) + 0.25*sqrt(c1*u1 + c1*u2 - c1*u3 + c2*u4) - 0.25*sqrt(c1*u1 - c1*u2 + c1*u3 + c2*u4);
    torque_pitch = -0.25*sqrt(c1*u1 - c1*u2 - c1*u3 - c2*u4) + 0.25*sqrt(c1*u1 + c1*u2 + c1*u3 - c2*u4) - 0.25*sqrt(c1*u1 + c1*u2 - c1*u3 + c2*u4) + 0.25*sqrt(c1*u1 - c1*u2 + c1*u3 + c2*u4);
    torque_yaw = -0.25*sqrt(c1*u1 - c1*u2 - c1*u3 - c2*u4) - 0.25*sqrt(c1*u1 + c1*u2 + c1*u3 - c2*u4) + 0.25*sqrt(c1*u1 + c1*u2 - c1*u3 + c2*u4) + 0.25*sqrt(c1*u1 - c1*u2 + c1*u3 + c2*u4);
}